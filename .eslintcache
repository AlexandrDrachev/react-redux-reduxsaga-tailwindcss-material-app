[{"/home/developer/projects/using-animation/src/index.js":"1","/home/developer/projects/using-animation/src/reportWebVitals.js":"2","/home/developer/projects/using-animation/src/components/app/index.js":"3","/home/developer/projects/using-animation/src/components/app/App.js":"4","/home/developer/projects/using-animation/src/redux/store.js":"5","/home/developer/projects/using-animation/src/redux/rootSaga.js":"6","/home/developer/projects/using-animation/src/redux/rootReducer.js":"7","/home/developer/projects/using-animation/src/components/auth/index.js":"8","/home/developer/projects/using-animation/src/components/auth/Auth.js":"9","/home/developer/projects/using-animation/src/components/auth/login/index.js":"10","/home/developer/projects/using-animation/src/components/auth/register/index.js":"11","/home/developer/projects/using-animation/src/components/auth/login/Login.js":"12","/home/developer/projects/using-animation/src/components/auth/register/Register.js":"13","/home/developer/projects/using-animation/src/components/home/index.js":"14","/home/developer/projects/using-animation/src/components/home/Home.js":"15","/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorReducer.js":"16","/home/developer/projects/using-animation/src/components/error-indicator/index.js":"17","/home/developer/projects/using-animation/src/components/error-indicator/ErrorIndicator.js":"18","/home/developer/projects/using-animation/src/components/spinner/index.js":"19","/home/developer/projects/using-animation/src/components/spinner/Spinner.js":"20","/home/developer/projects/using-animation/src/components/app/redux/appReducer.js":"21","/home/developer/projects/using-animation/src/components/auth/AuthConfig.js":"22","/home/developer/projects/using-animation/src/components/app/AppConfig.js":"23","/home/developer/projects/using-animation/src/components/auth/authRoles.js":"24","/home/developer/projects/using-animation/src/components/admin/AdminConfig.js":"25","/home/developer/projects/using-animation/src/components/admin/Admin.js":"26","/home/developer/projects/using-animation/src/components/no-match/index.js":"27","/home/developer/projects/using-animation/src/components/no-match/NoMatch.js":"28","/home/developer/projects/using-animation/src/components/no-match/NoMatchConfig.js":"29","/home/developer/projects/using-animation/src/components/auth/redux/authSaga.js":"30","/home/developer/projects/using-animation/src/components/auth/redux/authReducer.js":"31","/home/developer/projects/using-animation/src/components/auth/redux/authActions.js":"32","/home/developer/projects/using-animation/src/services/serviceApi.js":"33","/home/developer/projects/using-animation/src/services/fake-data/dummyUsers.js":"34","/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorActions.js":"35","/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorSaga.js":"36","/home/developer/projects/using-animation/src/components/app/redux/appActions.js":"37","/home/developer/projects/using-animation/src/components/admin/redux/adminReducer.js":"38","/home/developer/projects/using-animation/src/components/admin/redux/adminActions.js":"39","/home/developer/projects/using-animation/src/components/admin/redux/adminSaga.js":"40","/home/developer/projects/using-animation/src/services/adminApi.js":"41","/home/developer/projects/using-animation/src/components/admin/translate/eng.js":"42","/home/developer/projects/using-animation/src/components/admin/translate/rus.js":"43","/home/developer/projects/using-animation/src/components/admin/translate/ukr.js":"44","/home/developer/projects/using-animation/src/configs/routes.js":"45","/home/developer/projects/using-animation/src/translator/translator.js":"46","/home/developer/projects/using-animation/src/components/auth/login/translate/eng.js":"47","/home/developer/projects/using-animation/src/components/auth/login/translate/rus.js":"48","/home/developer/projects/using-animation/src/components/auth/login/translate/ukr.js":"49","/home/developer/projects/using-animation/src/components/auth/register/translate/eng.js":"50","/home/developer/projects/using-animation/src/components/auth/register/translate/rus.js":"51","/home/developer/projects/using-animation/src/components/auth/register/translate/ukr.js":"52","/home/developer/projects/using-animation/src/components/home/translate/eng.js":"53","/home/developer/projects/using-animation/src/components/home/translate/rus.js":"54","/home/developer/projects/using-animation/src/components/home/translate/ukr.js":"55","/home/developer/projects/using-animation/src/components/no-match/translate/rus.js":"56","/home/developer/projects/using-animation/src/components/no-match/translate/ukr.js":"57","/home/developer/projects/using-animation/src/components/no-match/translate/eng.js":"58"},{"size":693,"mtime":1608042501507,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":1608026918759,"results":"61","hashOfConfig":"60"},{"size":45,"mtime":1608027440705,"results":"62","hashOfConfig":"60"},{"size":1325,"mtime":1610547052862,"results":"63","hashOfConfig":"60"},{"size":356,"mtime":1608042344245,"results":"64","hashOfConfig":"60"},{"size":706,"mtime":1610547052978,"results":"65","hashOfConfig":"60"},{"size":1122,"mtime":1610547052966,"results":"66","hashOfConfig":"60"},{"size":48,"mtime":1608043190980,"results":"67","hashOfConfig":"60"},{"size":1097,"mtime":1608299209465,"results":"68","hashOfConfig":"60"},{"size":51,"mtime":1608042800800,"results":"69","hashOfConfig":"60"},{"size":60,"mtime":1608042959691,"results":"70","hashOfConfig":"60"},{"size":7369,"mtime":1610547052862,"results":"71","hashOfConfig":"60"},{"size":9923,"mtime":1610547052914,"results":"72","hashOfConfig":"60"},{"size":48,"mtime":1608043624804,"results":"73","hashOfConfig":"60"},{"size":11030,"mtime":1610547052954,"results":"74","hashOfConfig":"60"},{"size":578,"mtime":1610547052946,"results":"75","hashOfConfig":"60"},{"size":78,"mtime":1608102381587,"results":"76","hashOfConfig":"60"},{"size":2127,"mtime":1610547052930,"results":"77","hashOfConfig":"60"},{"size":57,"mtime":1608103563136,"results":"78","hashOfConfig":"60"},{"size":572,"mtime":1608275601808,"results":"79","hashOfConfig":"60"},{"size":575,"mtime":1610547052862,"results":"80","hashOfConfig":"60"},{"size":606,"mtime":1608188282495,"results":"81","hashOfConfig":"60"},{"size":228,"mtime":1608113616837,"results":"82","hashOfConfig":"60"},{"size":101,"mtime":1608124031618,"results":"83","hashOfConfig":"60"},{"size":244,"mtime":1608121148528,"results":"84","hashOfConfig":"60"},{"size":4080,"mtime":1610547052826,"results":"85","hashOfConfig":"60"},{"size":57,"mtime":1608117967769,"results":"86","hashOfConfig":"60"},{"size":2108,"mtime":1610547052954,"results":"87","hashOfConfig":"60"},{"size":217,"mtime":1608119207684,"results":"88","hashOfConfig":"60"},{"size":1863,"mtime":1610547052914,"results":"89","hashOfConfig":"60"},{"size":788,"mtime":1610547052902,"results":"90","hashOfConfig":"60"},{"size":726,"mtime":1610547052878,"results":"91","hashOfConfig":"60"},{"size":3435,"mtime":1610547053006,"results":"92","hashOfConfig":"60"},{"size":1353,"mtime":1610547052986,"results":"93","hashOfConfig":"60"},{"size":629,"mtime":1610547052946,"results":"94","hashOfConfig":"60"},{"size":756,"mtime":1610547052954,"results":"95","hashOfConfig":"60"},{"size":268,"mtime":1610547052862,"results":"96","hashOfConfig":"60"},{"size":414,"mtime":1610547052862,"results":"97","hashOfConfig":"60"},{"size":514,"mtime":1610547052850,"results":"98","hashOfConfig":"60"},{"size":1020,"mtime":1610547052862,"results":"99","hashOfConfig":"60"},{"size":163,"mtime":1610547052986,"results":"100","hashOfConfig":"60"},{"size":637,"mtime":1610547052862,"results":"101","hashOfConfig":"60"},{"size":710,"mtime":1610547052862,"results":"102","hashOfConfig":"60"},{"size":711,"mtime":1610547052862,"results":"103","hashOfConfig":"60"},{"size":344,"mtime":1610547052954,"results":"104","hashOfConfig":"60"},{"size":339,"mtime":1610547053006,"results":"105","hashOfConfig":"60"},{"size":1513,"mtime":1610547052862,"results":"106","hashOfConfig":"60"},{"size":1582,"mtime":1610547052862,"results":"107","hashOfConfig":"60"},{"size":1589,"mtime":1610547052862,"results":"108","hashOfConfig":"60"},{"size":1515,"mtime":1610547052914,"results":"109","hashOfConfig":"60"},{"size":1632,"mtime":1610547052914,"results":"110","hashOfConfig":"60"},{"size":1622,"mtime":1610547052914,"results":"111","hashOfConfig":"60"},{"size":1433,"mtime":1610547052954,"results":"112","hashOfConfig":"60"},{"size":1531,"mtime":1610547052954,"results":"113","hashOfConfig":"60"},{"size":1535,"mtime":1610547052954,"results":"114","hashOfConfig":"60"},{"size":1460,"mtime":1610547052954,"results":"115","hashOfConfig":"60"},{"size":1438,"mtime":1610547052954,"results":"116","hashOfConfig":"60"},{"size":1359,"mtime":1610547052954,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1b4cyv9",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"120"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/home/developer/projects/using-animation/src/index.js",[],["246","247"],"/home/developer/projects/using-animation/src/reportWebVitals.js",[],"/home/developer/projects/using-animation/src/components/app/index.js",[],"/home/developer/projects/using-animation/src/components/app/App.js",["248","249","250","251","252","253","254"],"import React from \"react\";\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { useSelector } from \"react-redux\";\nimport ErrorIndicator from \"../error-indicator\";\nimport Spinner from \"../spinner\";\n\nimport routes from \"../../configs/routes\";\nimport Login from \"../auth/login/Login\";\n\nconst App = () => {\n\n    const errorState = useSelector(({ errorIndicatorState }) => errorIndicatorState.error);\n    const loading = useSelector(({ appState }) => appState.loading);\n    const user = useSelector(({ appState }) => appState.userRole);\n\n    return (\n        <div className={`w-full h-screen relative overflow-hidden`}>\n            <div className={`absolute top-0 right-0 bottom-0 left-0 z-10`} />\n            <div className={`absolute top-0 right-0 bottom-0 left-0 z-20 gradient-animation`}>\n                <Switch>\n                    {\n                        routes.map((route, idx) => {\n                            const { role, exact, path, component } = route;\n                            if (role.includes(user)) {\n                                return <Route key={idx} role={role} exact={exact} path={path} component={component} />\n                            }\n                        })\n                    }\n                </Switch>\n            </div>\n        </div>\n    );\n};\n\nexport default App;","/home/developer/projects/using-animation/src/redux/store.js",[],"/home/developer/projects/using-animation/src/redux/rootSaga.js",[],"/home/developer/projects/using-animation/src/redux/rootReducer.js",[],"/home/developer/projects/using-animation/src/components/auth/index.js",[],["255","256"],"/home/developer/projects/using-animation/src/components/auth/Auth.js",[],"/home/developer/projects/using-animation/src/components/auth/login/index.js",[],"/home/developer/projects/using-animation/src/components/auth/register/index.js",[],"/home/developer/projects/using-animation/src/components/auth/login/Login.js",["257","258"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { getAuthAction } from \"../redux/authActions\";\nimport { onToggleLanguageAction } from \"../../app/redux/appActions\";\nimport ErrorIndicator from \"../../error-indicator\";\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../../translator/translator\";\n\nconst styles = () => ({\n    card: {\n        boxShadow: '7px 7px 10px 5px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\n    },\n    button: {\n        marginBottom: '20px'\n    },\n    input: {\n        marginBottom: '20px',\n        width: '100%',\n        maxWidth: '260px'\n    },\n    span1: {\n        fontSize: '10px'\n    },\n    span2: {\n        fontSize: '10px',\n        fontWeight: 'bold',\n        color: '#3f51b5',\n        cursor: 'pointer'\n    },\n    headTitle: {\n        fontSize: '20px',\n        fontWeight: 'bold',\n        marginBottom: '20px'\n    }\n});\n\nconst Login = (props) => {\n\n    const dispatch = useDispatch();\n    const userAuth = useSelector(({ authState }) => authState.user);\n    const [ showPass, setShowPass ] = useState(false);\n    const { classes } = props;\n    const [ user, setUser ] = useState({\n        login: \"\",\n        password: \"\"\n    });\n    const authError = useSelector(({ errorIndicatorState }) => errorIndicatorState);\n    const onSubmit = () => {\n        dispatch(getAuthAction(user));\n    };\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    useEffect(() => {\n        console.log(\"login: \", user.login);\n        console.log(\"pass: \", user.password);\n        console.log(\"authError: \", authError);\n    }, [user]);\n\n    const renderLanguageIcons = () => {\n        return translator.map((t, idx) => {\n            return (\n                <IconButton\n                    className={`focus:outline-none mr-10`}\n                    onClick={() => dispatch(onToggleLanguageAction(t.desc))}\n                    key={idx}>\n                    <div className={`w-20 h-20 flex flex-col justify-center items-center`}>\n                        <img className={`w-full`} alt=\"\" src={t.flag} />\n                    </div>\n                </IconButton>\n            );\n        });\n    };\n\n    if (userAuth) {\n        return <Redirect to=\"/\" />\n    }\n\n    if (authError.error) {\n        return <ErrorIndicator />\n    }\n\n    return (\n        <div className={`relative w-full h-screen overflow-hidden`}>\n            <div className={`absolute top-0 right-0 bottom-0 left-0 flex flex-col justify-center items-center`}>\n                <Card\n                    className={`w-2/3 sm:w-full py-50 flex flex-col justify-center items-center border-2 border-white\n                    rounded ${classes.card}`}>\n                    <div className={`w-full flex justify-center items-center`}>\n                        {renderLanguageIcons()}\n                    </div>\n                    <Typography className={classes.headTitle}>\n                        {l.loginToYourAccount}\n                    </Typography>\n                    <form className={`w-full flex flex-col justify-center items-center`}>\n                        <TextField\n                            onChange={(e) => setUser({\n                                ...user,\n                                login: e.target.value\n                            })}\n                            required\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-login\"\n                            variant=\"outlined\"\n                            label={l.loginPlaceholder}\n                        />\n\n                        <TextField\n                            onChange={(e) => setUser({\n                                ...user,\n                                password: e.target.value\n                            })}\n                            required\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-password\"\n                            variant=\"outlined\"\n                            type={showPass ? 'text' : 'password'}\n                            label={l.passwordPlaceholder}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            className={`focus:outline-none`}\n                                            onClick={() => setShowPass(!showPass)}\n                                            aria-label=\"Toggle password visibility\"\n                                        >\n                                            {showPass ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <CardActions>\n                            <Button\n                                onClick={() => onSubmit()}\n                                // disabled={login.length <= 3 || pass.length <= 3 }\n                                className={`focus:outline-none ${classes.button}`}\n                                size={`large`}\n                                color={`primary`}\n                                variant={`contained`}>\n                                {l.loginButton}\n                            </Button>\n                        </CardActions>\n                    </form>\n                    <div className={`w-full flex flex-col justify-center items-center`}>\n                        <Typography className={classes.span1}>\n                            {l.dontHaveAnAccount}\n                        </Typography>\n                        <Typography\n                            className={classes.span2}\n                            variant=\"body2\"\n                            gutterBottom>\n                            <Link to=\"/auth/register\">\n                                {l.registrationLink}\n                            </Link>\n                        </Typography>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    );\n};\n\nexport default withStyles(styles)(Login);","/home/developer/projects/using-animation/src/components/auth/register/Register.js",["259"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { getRegisterAction } from \"../redux/authActions\";\nimport { onToggleLanguageAction } from \"../../app/redux/appActions\";\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../../translator/translator\";\n\nconst styles = () => ({\n    card: {\n        boxShadow: '7px 7px 10px 5px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\n    },\n    button: {\n        marginBottom: '20px'\n    },\n    input: {\n        marginBottom: '20px',\n        width: '100%',\n        maxWidth: '260px'\n    },\n    span1: {\n        fontSize: '10px'\n    },\n    span2: {\n        fontSize: '10px',\n        fontWeight: 'bold',\n        color: '#3f51b5',\n        cursor: 'pointer'\n    },\n    headTitle: {\n        fontSize: '20px',\n        fontWeight: 'bold',\n        marginBottom: '20px'\n    }\n});\n\nconst Register = (props) => {\n\n    const user = useSelector(({ authState }) => authState.user);\n    const [ showPass, setShowPass ] = useState(false);\n    const [ showPassConfirm, setShowPassConfirm ] = useState(false);\n    const { classes } = props;\n    const dispatch = useDispatch();\n    const [ newUser, setNewUser ] = useState({\n        login: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\"\n    });\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    const validateForm = () => {\n        const { login, email, password, passwordConfirm } = newUser;\n        if (\n            login.length >= 3 &&\n            email.length >= 5 &&\n            email.includes(\"@\") &&\n            password.length >= 3 &&\n            passwordConfirm.length >= 3 &&\n            password === passwordConfirm\n        ) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    const getRegister = () => {\n        dispatch(getRegisterAction(newUser))\n    };\n\n    const renderLanguageIcons = () => {\n        return translator.map((t, idx) => {\n            return (\n                <IconButton\n                    className={`focus:outline-none mr-10`}\n                    onClick={() => dispatch(onToggleLanguageAction(t.desc))}\n                    key={idx}>\n                    <div className={`w-20 h-20 flex flex-col justify-center items-center`}>\n                        <img className={`w-full`} alt=\"\" src={t.flag} />\n                    </div>\n                </IconButton>\n            );\n        });\n    };\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    if (user) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <div className={`relative w-full h-screen overflow-hidden`}>\n            <div className={`absolute top-0 right-0 bottom-0 left-0 flex flex-col justify-center items-center`}>\n                <Card\n                    className={`w-2/3 sm:w-full py-50 flex flex-col justify-center items-center border-2 border-white\n                    rounded ${classes.card}`}>\n                    <div className={`w-full flex justify-center items-center`}>\n                        {renderLanguageIcons()}\n                    </div>\n                    <Typography className={classes.headTitle}>\n                        {l.createAnAccount}\n                    </Typography>\n                    <form className={`w-full flex flex-col justify-center items-center`}>\n\n                        <TextField\n                            required\n                            onChange={(e) => {\n                                setNewUser({\n                                    ...newUser,\n                                    login: e.target.value\n                                });\n                            }}\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-login\"\n                            variant=\"outlined\"\n                            label={l.loginPlaceholder}\n                        />\n\n                        <TextField\n                            required\n                            onChange={(e) => {\n                                setNewUser({\n                                    ...newUser,\n                                    email: e.target.value\n                                });\n                            }}\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-email\"\n                            variant=\"outlined\"\n                            label={l.emailPlaceholder}\n                        />\n\n                        <TextField\n                            required\n                            onChange={(e) => {\n                                setNewUser({\n                                    ...newUser,\n                                    password: e.target.value\n                                });\n                            }}\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-password\"\n                            variant=\"outlined\"\n                            type={showPass ? 'text' : 'password'}\n                            label={l.passwordPlaceholder}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            className={`focus:outline-none`}\n                                            onClick={() => setShowPass(!showPass)}\n                                            aria-label=\"Toggle password visibility\"\n                                        >\n                                            {showPass ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n\n                        <TextField\n                            required\n                            onChange={(e) => {\n                                setNewUser({\n                                    ...newUser,\n                                    passwordConfirm: e.target.value\n                                });\n                            }}\n                            className={`\n                            ${classes.input} sm:w-full text-blue-600\n                            `}\n                            id=\"outlined-adornment-password-confirm\"\n                            variant={`outlined`}\n                            error={newUser.password !== newUser.passwordConfirm}\n                            type={showPassConfirm ? 'text' : 'password'}\n                            label={l.passwordConfirmPlaceholder}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            className={`focus:outline-none`}\n                                            onClick={() => setShowPassConfirm(!showPassConfirm)}\n                                            aria-label=\"Toggle password visibility\"\n                                        >\n                                            {showPassConfirm ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <CardActions>\n                            <Button\n                                onClick={() => getRegister()}\n                                disabled={validateForm()}\n                                className={`focus:outline-none ${classes.button}`}\n                                size={`large`}\n                                color={`primary`}\n                                variant={`contained`}>\n                                {l.registerButton}\n                            </Button>\n                        </CardActions>\n                    </form>\n                    <div className={`w-full flex flex-col justify-center items-center`}>\n                        <Typography className={classes.span1}>\n                            {l.alreadyHaveAnAccount}\n                        </Typography>\n                        <Typography\n                            className={classes.span2}\n                            variant=\"body2\"\n                            gutterBottom>\n                            <Link to=\"/auth/login\">\n                                {l.loginLink}\n                            </Link>\n                        </Typography>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    );\n};\n\nexport default withStyles(styles)(Register);","/home/developer/projects/using-animation/src/components/home/index.js",[],"/home/developer/projects/using-animation/src/components/home/Home.js",["260","261","262","263","264","265","266"],"import React, { useEffect, useState } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Spinner from \"../spinner\";\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport PersonIcon from '@material-ui/icons/PermIdentity';\nimport WorkOutlineIcon from '@material-ui/icons/WorkOutline';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport AssignmentIndOutlinedIcon from '@material-ui/icons/AssignmentIndOutlined';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport routes from \"../../configs/routes\";\nimport ErrorIndicator from \"../error-indicator\";\nimport { logoutAction } from \"../auth/redux/authActions\";\nimport { onToggleLanguageAction } from \"../app/redux/appActions\";\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../translator/translator\";\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n    root: {\n        // flexGrow: 1,\n        display: \"flex\"\n    },\n    grow: {\n        // flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    userMenu: {\n        marginLeft: -12,\n        marginRight: 50,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    navBar: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    }\n});\n\nconst Home = ({ classes, theme }) => {\n\n    const [ anchorEl, setAnchorEl ] = useState(null);\n    const [ openDrawer, setOpenDrawer ] = useState(false);\n    const [ openUserMenu, setOpenUserMenu ] = useState(false);\n    const authError = useSelector(({ errorIndicatorState }) => errorIndicatorState.error);\n\n    const user = useSelector(({ authState }) => authState.user);\n    const dispatch = useDispatch();\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    const naviItems = [\n        {\n            desc: l.homeNaviItemsDesc,\n            icon: <HomeOutlinedIcon />,\n            path: \"/\"\n        },\n        {\n            desc: l.profileNaviItemsDesc,\n            icon: <PersonIcon />,\n            path: \"/profile\"\n        },\n        {\n            desc: l.worksNaviItemsDesc,\n            icon: <WorkOutlineIcon />,\n            path: \"/works\"\n        }\n    ];\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpenUserMenu(true);\n    };\n\n    const handleClose = () => {\n        setOpenUserMenu(false);\n        setAnchorEl(null);\n    };\n\n    const handleDrawerOpen = () => {\n        setOpenDrawer(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpenDrawer(false);\n    };\n\n    const renderLanguageIcons = () => {\n        return translator.map((t, idx) => {\n            return (\n                <IconButton\n                    className={`focus:outline-none mr-10`}\n                    onClick={() => dispatch(onToggleLanguageAction(t.desc))}\n                    key={idx}>\n                    <div className={`w-20 h-20 flex flex-col justify-center items-center`}>\n                        <img className={`w-full`} alt=\"\" src={t.flag} />\n                    </div>\n                </IconButton>\n            );\n        });\n    };\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    if (!user) {\n        return <Redirect to=\"/auth/login\" />\n    }\n\n    if (authError) {\n        return <ErrorIndicator />\n    }\n\n    return (\n        <div className={classes.root}>\n            <Drawer\n                variant=\"permanent\"\n                className={classNames(classes.drawer, {\n                    [classes.drawerOpen]: openDrawer,\n                    [classes.drawerClose]: !openDrawer,\n                })}\n                classes={{\n                    paper: classNames({\n                        [classes.drawerOpen]: openDrawer,\n                        [classes.drawerClose]: !openDrawer,\n                    }),\n                }}\n                open={openDrawer}\n            >\n                <div className={`${classes.toolbar}`}>\n                    <IconButton\n                        className={`focus:outline-none`}\n                        onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? openDrawer && <ChevronRightIcon /> : openDrawer && <ChevronLeftIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {naviItems.map((nav, index) => (\n                        <Link to={nav.path} key={index}>\n                            <ListItem button>\n                                <ListItemIcon>{nav.icon}</ListItemIcon>\n                                <ListItemText primary={nav.desc} />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            </Drawer>\n            <AppBar\n                position=\"static\"\n            >\n                <Toolbar className={classes.navBar}>\n                    <div className={`flex justify-center items-center`}>\n                        <IconButton\n                            onClick={handleDrawerOpen}\n                            className={`focus:outline-none`}\n                            color=\"inherit\"\n                            aria-label=\"Menu\">\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                            {l.home}\n                        </Typography>\n                    </div>\n\n                    <div className={`flex flex-col justify-center items-center`}>\n                        <div className={`flex pr-50`}>\n                            {renderLanguageIcons()}\n                        </div>\n                        <div>\n                            <span className={`mr-10 font-bold sm:hidden`}>{user.userName}</span>\n                            <IconButton\n                                className={`${classes.userMenu} focus:outline-none sm:mr-40`}\n                                aria-owns={openUserMenu ? 'menu-appbar' : undefined}\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                {user.avatar ?\n                                    <div className={`w-30 h-30`}>\n                                        <img className={`w-full rounded-full`} src={user.avatar} alt=\"\" />\n                                    </div> :\n                                    <AccountCircle />}\n                            </IconButton>\n                        </div>\n                    </div>\n\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={openUserMenu}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={handleClose}>\n                            <SettingsOutlinedIcon fontSize=\"small\" color=\"action\" className={`mr-10`} />\n                            <div className={``}>\n                                {l.settingsMenuItem}\n                            </div>\n                        </MenuItem>\n                        <MenuItem onClick={() => dispatch(logoutAction())}>\n                            <ExitToAppOutlinedIcon fontSize=\"small\" color=\"action\" className={`mr-10`} />\n                            {l.logoutMenuItem}\n                        </MenuItem>\n                        {user.role === \"admin\" &&\n                        <Link to=\"/admin\">\n                            <MenuItem>\n                                <AssignmentIndOutlinedIcon fontSize=\"small\" color=\"action\" className={`mr-10`} />\n                                {l.adminPanelMenuItem}\n                            </MenuItem>\n                        </Link>}\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Home);\n\n","/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorReducer.js",[],"/home/developer/projects/using-animation/src/components/error-indicator/index.js",[],"/home/developer/projects/using-animation/src/components/error-indicator/ErrorIndicator.js",["267"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { closeErrorIndicatorAction } from \"./redux/errorIndicatorActions\";\n\n// function Transition(props) {\n//     return <Slide direction=\"up\" {...props} />;\n// }\n\nconst ErrorIndicator = () => {\n\n    const [open, setOpen] = useState(true);\n    const errorState = useSelector(({ errorIndicatorState }) => errorIndicatorState);\n    const dispatch = useDispatch();\n\n    // const handleClickOpen = () => {\n    //     setOpen(true);\n    // };\n\n    const handleClose = () => {\n        setOpen(false);\n        dispatch(closeErrorIndicatorAction());\n    };\n    return (\n        <div>\n            <Dialog\n                open={open}\n                // TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    {errorState.titleError}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {errorState.messageError}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Link to=\"/auth/login\">\n                        <Button onClick={handleClose} color=\"primary\">\n                            Agree\n                        </Button>\n                    </Link>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default ErrorIndicator;","/home/developer/projects/using-animation/src/components/spinner/index.js",[],"/home/developer/projects/using-animation/src/components/spinner/Spinner.js",[],"/home/developer/projects/using-animation/src/components/app/redux/appReducer.js",[],"/home/developer/projects/using-animation/src/components/auth/AuthConfig.js",[],"/home/developer/projects/using-animation/src/components/app/AppConfig.js",[],"/home/developer/projects/using-animation/src/components/auth/authRoles.js",[],"/home/developer/projects/using-animation/src/components/admin/AdminConfig.js",[],"/home/developer/projects/using-animation/src/components/admin/Admin.js",["268","269","270","271"],"import React, { useState, useEffect } from \"react\";\n\nimport { Redirect, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Spinner from \"../spinner\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport { adminGetUsersAction, adminTestActionChannelAction } from \"./redux/adminActions\";\nimport { onToggleLanguageAction } from \"../app/redux/appActions\";\nimport { logoutAction } from \"../auth/redux/authActions\";\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../translator/translator\";\n\nconst Admin = () => {\n\n    const user = useSelector(({ authState }) => authState.user);\n    const adminState = useSelector(({ adminState }) => adminState);\n    const { loading, loaded, users, testBufferCounter } = adminState;\n    const dispatch = useDispatch();\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    useEffect(() => {\n        if (!users) {\n            dispatch(adminGetUsersAction());\n        }\n    }, []);\n\n    const renderLanguageIcons = () => {\n        return translator.map((t, idx) => {\n            return (\n                <IconButton\n                    className={`focus:outline-none mr-10`}\n                    onClick={() => dispatch(onToggleLanguageAction(t.desc))}\n                    key={idx}>\n                    <div className={`w-20 h-20 flex flex-col justify-center items-center`}>\n                        <img className={`w-full`} alt=\"\" src={t.flag} />\n                    </div>\n                </IconButton>\n            );\n        });\n    };\n\n    // if (!users) {\n    //     return <Spinner />\n    // }\n\n    if (!user) {\n        return <Redirect to=\"/auth/login\" />\n    }\n\n    return (\n        <div className={`w-full flex flex-col justify-center items-center mt-40`}>\n            <div className={`w-full flex justify-end items-center mr-20`}>\n                {renderLanguageIcons()}\n                <Link to=\"/\">\n                    <IconButton\n                        className={`focus:outline-none mr-10`}>\n                        <HomeIcon />\n                    </IconButton>\n                </Link>\n                <IconButton\n                    onClick={() => dispatch(logoutAction())}\n                    className={`focus:outline-none`}>\n                    <ExitToAppIcon color=\"action\"/>\n                </IconButton>\n            </div>\n            <div className={`text-white font-bold`}>\n                {l.adminDashboard}\n            </div>\n            <div className={`flex mt-40 sm:flex-col sm:justify-center sm:items-center`}>\n                <div className={`w-100 h-50 flex flex-col justify-center items-center bg-white rounded m-15 relative`}>\n                    {testBufferCounter}\n                    <div className={`absolute -top-15 text-xs text-white font-bold whitespace-nowrap`}>\n                        {l.testBufferChannel}\n                    </div>\n                </div>\n                <div\n                    className={`p-15 w-300 h-50 cursor-pointer rounded m-15 relative`}>\n                    <div\n                        onClick={() => dispatch(adminTestActionChannelAction())}\n                        className={`z-20 absolute w-full top-0 right-o bottom-0 left-0`}/>\n                    <div className={`\n                    z-10 absolute w-full top-0 right-o bottom-0 left-0 bg-white rounded flex flex-col justify-center \n                    items-center\n                    `}>\n                        {l.pressSeveralTimesQuickly}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Admin;","/home/developer/projects/using-animation/src/components/no-match/index.js",[],"/home/developer/projects/using-animation/src/components/no-match/NoMatch.js",["272"],"import React, { useState, useEffect } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../translator/translator\";\n\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst NoMatch = () => {\n\n    const history = useHistory();\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    return (\n        <Dialog\n            open={true}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {l.label}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {l.desc}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant={`contained`}\n                    color=\"primary\">\n                    <Link to=\"/auth/login\">\n                        {l.loginLink}\n                    </Link>\n                </Button>\n                <Button\n                    variant={`contained`}\n                    onClick={() => history.goBack()}\n                    color=\"primary\">\n                    {l.goBackButton}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default NoMatch;","/home/developer/projects/using-animation/src/components/no-match/NoMatchConfig.js",[],"/home/developer/projects/using-animation/src/components/auth/redux/authSaga.js",[],"/home/developer/projects/using-animation/src/components/auth/redux/authReducer.js",[],"/home/developer/projects/using-animation/src/components/auth/redux/authActions.js",[],"/home/developer/projects/using-animation/src/services/serviceApi.js",["273"],"import { dummyUsers } from \"./fake-data/dummyUsers\";\nimport {getErrorWorker} from \"../components/error-indicator/redux/errorIndicatorSaga\";\n\nexport default class ServiceApi{\n\n    getLogin = (user, realData) => {\n        const { login, password } = user;\n\n        if (!realData) {\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                        const user = dummyUsers.find((user) => user.userName.toString() === login.toString() &&\n                        user.password.toString() === password.toString());\n                        if (user) {\n                            resolve(user);\n                        } else {\n                            resolve(null);\n                        }\n                    }, 700);\n            })\n                .then((res) => {\n                    if (Math.random() > 0.75) {\n                        return null;\n                    }\n                    return res;\n                })\n                .catch(() => {\n                    return null;\n                });\n        }\n    };\n\n    createNewUser = (newUser, realData) => {\n        const { login, email, password } = newUser;\n        if (!realData) {\n            const users = dummyUsers;\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    const checkLogin = users.find((user) => user.userName.toString() === login.toString());\n                    const checkEmail = users.find((user) => user.userEmail.toString() === email.toString());\n                    const newUser = {\n                        id: users.length,\n                        role: \"user\",\n                        userName: login,\n                        userEmail: email,\n                        password: password,\n                        token: `eexxaammppllee%ttookkeenn#${users.length}`,\n                        refreshToken: `eexxaammppllee%rreeffrreesshh%ttookkeenn#${users.length}`\n                    };\n                    if (checkLogin) {\n                        resolve({\n                            error: true,\n                            messageError: \"A user with this login already exists\",\n                            titleError: \"Registration error!\"\n                        });\n                    } else if (checkEmail) {\n                        resolve({\n                            error: true,\n                            messageError: \"A user with this email already exists\",\n                            titleError: \"Registration error!\"\n                        });\n                    } else {\n                        dummyUsers.push(newUser);\n                        resolve(newUser);\n                    }\n                }, 700);\n            })\n                .then((res) => {\n                    if (Math.random() > 0.75) {\n                        return {\n                            error: true,\n                            messageError: \"An error occurred on the server, please try again\",\n                            titleError: \"Server error!\"\n                        };\n                    }\n                    return res;\n                })\n                .catch(() => {\n                    return {\n                        error: true,\n                        messageError: \"An error occurred on the server, please try again\",\n                        titleError: \"Server error!\"\n                    };\n                });\n        }\n    };\n\n}","/home/developer/projects/using-animation/src/services/fake-data/dummyUsers.js",[],"/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorActions.js",[],"/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorSaga.js",[],"/home/developer/projects/using-animation/src/components/app/redux/appActions.js",[],"/home/developer/projects/using-animation/src/components/admin/redux/adminReducer.js",[],"/home/developer/projects/using-animation/src/components/admin/redux/adminActions.js",[],"/home/developer/projects/using-animation/src/components/admin/redux/adminSaga.js",[],"/home/developer/projects/using-animation/src/services/adminApi.js",["274"],"import { dummyUsers } from \"./fake-data/dummyUsers\";\n\nexport default class AdminApi {\n\n    getUsers = (realData) => {\n        if (!realData) {\n\n        }\n    };\n\n}","/home/developer/projects/using-animation/src/components/admin/translate/eng.js",[],"/home/developer/projects/using-animation/src/components/admin/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/admin/translate/ukr.js",[],"/home/developer/projects/using-animation/src/configs/routes.js",[],"/home/developer/projects/using-animation/src/translator/translator.js",[],"/home/developer/projects/using-animation/src/components/auth/login/translate/eng.js",[],"/home/developer/projects/using-animation/src/components/auth/login/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/auth/login/translate/ukr.js",[],"/home/developer/projects/using-animation/src/components/auth/register/translate/eng.js",["275"],"export const eng = {\n    A: \"=====>\",\n    alreadyHaveAnAccount: \"Already have an account?\",\n\n    B: \"=====>\",\n    bFirstLetter: \"B first letter\",\n\n    C: \"=====>\",\n    createAnAccount: \"CREATE AN ACCOUNT\",\n\n    D: \"=====>\",\n    dFirstLetter: \"D first letter\",\n\n    E: \"=====>\",\n    emailPlaceholder: \"E-mail\",\n\n    F: \"=====>\",\n    fFirstLetter: \"F first letter\",\n\n    G: \"=====>\",\n    gFirstLetter: \"G first letter\",\n\n    H: \"=====>\",\n    hFirstLetter: \"H first letter\",\n\n    I: \"=====>\",\n    iFirstLetter: \"I first letter\",\n\n    J: \"=====>\",\n    jFirstLetter: \"J first letter\",\n\n    K: \"=====>\",\n    kFirstLetter: \"K first letter\",\n\n    L: \"=====>\",\n    loginPlaceholder: \"Login\",\n    loginLink: \"Login\",\n\n    M: \"=====>\",\n    mFirstLetter: \"M first letter\",\n\n    N: \"=====>\",\n    nFirstLetter: \"N first letter\",\n\n    O: \"=====>\",\n    oFirstLetter: \"O first letter\",\n\n    P: \"=====>\",\n    passwordPlaceholder: \"Password\",\n    passwordConfirmPlaceholder: \"Password(Confirm)\",\n\n    Q: \"=====>\",\n    qFirstLetter: \"Q first letter\",\n\n    R: \"=====>\",\n    registerButton: \"REGISTER\",\n\n    S: \"=====>\",\n    sFirstLetter: \"S first letter\",\n\n    T: \"=====>\",\n    tFirstLetter: \"T first letter\",\n\n    U: \"=====>\",\n    uFirstLetter: \"U first letter\",\n\n    V: \"=====>\",\n    vFirstLetter: \"V first letter\",\n\n    W: \"=====>\",\n    wFirstLetter: \"W first letter\",\n\n    X: \"=====>\",\n    xFirstLetter: \"X first letter\",\n\n    Y: \"=====>\",\n    yFirstLetter: \"Y first letter\",\n\n    Z: \"=====>\",\n    zFirstLetter: \"Z first letter\",\n};","/home/developer/projects/using-animation/src/components/auth/register/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/auth/register/translate/ukr.js",[],"/home/developer/projects/using-animation/src/components/home/translate/eng.js",[],"/home/developer/projects/using-animation/src/components/home/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/home/translate/ukr.js",[],"/home/developer/projects/using-animation/src/components/no-match/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/no-match/translate/ukr.js",[],"/home/developer/projects/using-animation/src/components/no-match/translate/eng.js",[],{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":3,"column":25,"nodeType":"282","messageId":"283","endLine":3,"endColumn":33},{"ruleId":"280","severity":1,"message":"284","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":22},{"ruleId":"280","severity":1,"message":"285","line":7,"column":8,"nodeType":"282","messageId":"283","endLine":7,"endColumn":15},{"ruleId":"280","severity":1,"message":"286","line":10,"column":8,"nodeType":"282","messageId":"283","endLine":10,"endColumn":13},{"ruleId":"280","severity":1,"message":"287","line":14,"column":11,"nodeType":"282","messageId":"283","endLine":14,"endColumn":21},{"ruleId":"280","severity":1,"message":"288","line":15,"column":11,"nodeType":"282","messageId":"283","endLine":15,"endColumn":18},{"ruleId":"289","severity":1,"message":"290","line":24,"column":49,"nodeType":"291","messageId":"292","endLine":24,"endColumn":51},{"ruleId":"276","replacedBy":"293"},{"ruleId":"278","replacedBy":"294"},{"ruleId":"280","severity":1,"message":"295","line":8,"column":8,"nodeType":"282","messageId":"283","endLine":8,"endColumn":19},{"ruleId":"296","severity":1,"message":"297","line":86,"column":8,"nodeType":"298","endLine":86,"endColumn":14,"suggestions":"299"},{"ruleId":"280","severity":1,"message":"295","line":8,"column":8,"nodeType":"282","messageId":"283","endLine":8,"endColumn":19},{"ruleId":"280","severity":1,"message":"285","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":15},{"ruleId":"280","severity":1,"message":"300","line":20,"column":8,"nodeType":"282","messageId":"283","endLine":20,"endColumn":14},{"ruleId":"280","severity":1,"message":"301","line":21,"column":8,"nodeType":"282","messageId":"283","endLine":21,"endColumn":24},{"ruleId":"280","severity":1,"message":"302","line":22,"column":8,"nodeType":"282","messageId":"283","endLine":22,"endColumn":17},{"ruleId":"280","severity":1,"message":"303","line":31,"column":8,"nodeType":"282","messageId":"283","endLine":31,"endColumn":17},{"ruleId":"280","severity":1,"message":"304","line":32,"column":8,"nodeType":"282","messageId":"283","endLine":32,"endColumn":16},{"ruleId":"280","severity":1,"message":"305","line":35,"column":8,"nodeType":"282","messageId":"283","endLine":35,"endColumn":14},{"ruleId":"280","severity":1,"message":"306","line":10,"column":8,"nodeType":"282","messageId":"283","endLine":10,"endColumn":13},{"ruleId":"280","severity":1,"message":"285","line":5,"column":8,"nodeType":"282","messageId":"283","endLine":5,"endColumn":15},{"ruleId":"280","severity":1,"message":"288","line":20,"column":13,"nodeType":"282","messageId":"283","endLine":20,"endColumn":20},{"ruleId":"280","severity":1,"message":"307","line":20,"column":22,"nodeType":"282","messageId":"283","endLine":20,"endColumn":28},{"ruleId":"296","severity":1,"message":"308","line":41,"column":8,"nodeType":"298","endLine":41,"endColumn":10,"suggestions":"309"},{"ruleId":"280","severity":1,"message":"310","line":14,"column":10,"nodeType":"282","messageId":"283","endLine":14,"endColumn":20},{"ruleId":"280","severity":1,"message":"311","line":2,"column":9,"nodeType":"282","messageId":"283","endLine":2,"endColumn":23},{"ruleId":"280","severity":1,"message":"312","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":20},{"ruleId":"280","severity":1,"message":"313","line":1,"column":7,"nodeType":"282","messageId":"283","endLine":1,"endColumn":10},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ErrorIndicator' is defined but never used.","'Spinner' is defined but never used.","'Login' is defined but never used.","'errorState' is assigned a value but never used.","'loading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["314"],["315"],"'CardContent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authError'. Either include it or remove the dependency array.","ArrayExpression",["316"],"'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'routes' is defined but never used.","'Slide' is defined but never used.","'loaded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'users'. Either include them or remove the dependency array.",["317"],"'translator' is defined but never used.","'getErrorWorker' is defined but never used.","'dummyUsers' is defined but never used.","'eng' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},"Update the dependencies array to be: [authError, user]",{"range":"322","text":"323"},"Update the dependencies array to be: [dispatch, users]",{"range":"324","text":"325"},[2702,2708],"[authError, user]",[1425,1427],"[dispatch, users]"]