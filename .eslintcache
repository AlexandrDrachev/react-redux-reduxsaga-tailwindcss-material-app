[{"/home/developer/projects/using-animation/src/index.js":"1","/home/developer/projects/using-animation/src/reportWebVitals.js":"2","/home/developer/projects/using-animation/src/components/app/index.js":"3","/home/developer/projects/using-animation/src/components/app/App.js":"4","/home/developer/projects/using-animation/src/redux/store.js":"5","/home/developer/projects/using-animation/src/redux/rootSaga.js":"6","/home/developer/projects/using-animation/src/redux/rootReducer.js":"7","/home/developer/projects/using-animation/src/components/auth/index.js":"8","/home/developer/projects/using-animation/src/components/auth/Auth.js":"9","/home/developer/projects/using-animation/src/components/auth/login/index.js":"10","/home/developer/projects/using-animation/src/components/auth/register/index.js":"11","/home/developer/projects/using-animation/src/components/auth/login/Login.js":"12","/home/developer/projects/using-animation/src/components/auth/register/Register.js":"13","/home/developer/projects/using-animation/src/components/home/index.js":"14","/home/developer/projects/using-animation/src/components/home/Home.js":"15","/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorReducer.js":"16","/home/developer/projects/using-animation/src/components/error-indicator/index.js":"17","/home/developer/projects/using-animation/src/components/error-indicator/ErrorIndicator.js":"18","/home/developer/projects/using-animation/src/components/spinner/index.js":"19","/home/developer/projects/using-animation/src/components/spinner/Spinner.js":"20","/home/developer/projects/using-animation/src/components/app/redux/appReducer.js":"21","/home/developer/projects/using-animation/src/components/auth/AuthConfig.js":"22","/home/developer/projects/using-animation/src/components/app/AppConfig.js":"23","/home/developer/projects/using-animation/src/components/auth/authRoles.js":"24","/home/developer/projects/using-animation/src/components/admin/AdminConfig.js":"25","/home/developer/projects/using-animation/src/components/admin/Admin.js":"26","/home/developer/projects/using-animation/src/components/no-match/index.js":"27","/home/developer/projects/using-animation/src/components/no-match/NoMatch.js":"28","/home/developer/projects/using-animation/src/components/no-match/NoMatchConfig.js":"29","/home/developer/projects/using-animation/src/components/auth/redux/authSaga.js":"30","/home/developer/projects/using-animation/src/components/auth/redux/authReducer.js":"31","/home/developer/projects/using-animation/src/components/auth/redux/authActions.js":"32","/home/developer/projects/using-animation/src/services/serviceApi.js":"33","/home/developer/projects/using-animation/src/services/fake-data/dummyUsers.js":"34","/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorActions.js":"35","/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorSaga.js":"36","/home/developer/projects/using-animation/src/components/app/redux/appActions.js":"37","/home/developer/projects/using-animation/src/components/admin/redux/adminReducer.js":"38","/home/developer/projects/using-animation/src/components/admin/redux/adminActions.js":"39","/home/developer/projects/using-animation/src/components/admin/redux/adminSaga.js":"40","/home/developer/projects/using-animation/src/services/adminApi.js":"41","/home/developer/projects/using-animation/src/components/admin/translate/eng.js":"42","/home/developer/projects/using-animation/src/components/admin/translate/rus.js":"43","/home/developer/projects/using-animation/src/components/admin/translate/ukr.js":"44","/home/developer/projects/using-animation/src/configs/routes.js":"45","/home/developer/projects/using-animation/src/translator/translator.js":"46","/home/developer/projects/using-animation/src/components/auth/login/translate/eng.js":"47","/home/developer/projects/using-animation/src/components/auth/login/translate/rus.js":"48","/home/developer/projects/using-animation/src/components/auth/login/translate/ukr.js":"49","/home/developer/projects/using-animation/src/components/auth/register/translate/eng.js":"50","/home/developer/projects/using-animation/src/components/auth/register/translate/rus.js":"51","/home/developer/projects/using-animation/src/components/auth/register/translate/ukr.js":"52","/home/developer/projects/using-animation/src/components/home/translate/eng.js":"53","/home/developer/projects/using-animation/src/components/home/translate/rus.js":"54","/home/developer/projects/using-animation/src/components/home/translate/ukr.js":"55","/home/developer/projects/using-animation/src/components/no-match/translate/rus.js":"56","/home/developer/projects/using-animation/src/components/no-match/translate/ukr.js":"57","/home/developer/projects/using-animation/src/components/no-match/translate/eng.js":"58","/home/developer/projects/using-animation/src/components/alert-indicator/redux/alertIndicatorSaga.js":"59","/home/developer/projects/using-animation/src/components/alert-indicator/redux/alertIndicatorReducer.js":"60","/home/developer/projects/using-animation/src/components/alert-indicator/redux/alertIndicatorActions.js":"61","/home/developer/projects/using-animation/src/components/alert-indicator/index.js":"62","/home/developer/projects/using-animation/src/components/admin/components/users/index.js":"63","/home/developer/projects/using-animation/src/components/admin/components/test-buffer-channel/index.js":"64","/home/developer/projects/using-animation/src/components/admin/components/analytics/index.js":"65","/home/developer/projects/using-animation/src/components/alert-indicator/AlertIndicator.js":"66","/home/developer/projects/using-animation/src/components/admin/components/users/Users.js":"67","/home/developer/projects/using-animation/src/components/admin/components/test-buffer-channel/TestBufferChannel.js":"68","/home/developer/projects/using-animation/src/components/admin/components/analytics/Analytics.js":"69","/home/developer/projects/using-animation/src/components/custom-collection/CustomCollectionConfig.js":"70","/home/developer/projects/using-animation/src/components/custom-collection/CustomCollection.js":"71","/home/developer/projects/using-animation/src/translator/example.js":"72","/home/developer/projects/using-animation/src/components/custom-collection/index.js":"73","/home/developer/projects/using-animation/src/components/custom-collection/modals/confirm/index.js":"74","/home/developer/projects/using-animation/src/components/custom-collection/modals/confirm/ModalConfirm.js":"75","/home/developer/projects/using-animation/src/components/meme-gen/MemeGenConfig.js":"76","/home/developer/projects/using-animation/src/components/meme-gen/MemeGen.js":"77"},{"size":693,"mtime":1608042501507,"results":"78","hashOfConfig":"79"},{"size":362,"mtime":1608026918759,"results":"80","hashOfConfig":"79"},{"size":46,"mtime":1616058918911,"results":"81","hashOfConfig":"79"},{"size":1508,"mtime":1616058917983,"results":"82","hashOfConfig":"79"},{"size":357,"mtime":1616061809758,"results":"83","hashOfConfig":"79"},{"size":848,"mtime":1616061810030,"results":"84","hashOfConfig":"79"},{"size":1407,"mtime":1616061809438,"results":"85","hashOfConfig":"79"},{"size":48,"mtime":1608043190980,"results":"86","hashOfConfig":"79"},{"size":1098,"mtime":1616058918435,"results":"87","hashOfConfig":"79"},{"size":52,"mtime":1616060026324,"results":"88","hashOfConfig":"79"},{"size":61,"mtime":1616060025924,"results":"89","hashOfConfig":"79"},{"size":7610,"mtime":1616060026700,"results":"90","hashOfConfig":"79"},{"size":10143,"mtime":1616060026060,"results":"91","hashOfConfig":"79"},{"size":49,"mtime":1616060026292,"results":"92","hashOfConfig":"79"},{"size":13327,"mtime":1616061809510,"results":"93","hashOfConfig":"79"},{"size":581,"mtime":1616060026452,"results":"94","hashOfConfig":"79"},{"size":79,"mtime":1616060026656,"results":"95","hashOfConfig":"79"},{"size":2131,"mtime":1616060026148,"results":"96","hashOfConfig":"79"},{"size":58,"mtime":1616061809990,"results":"97","hashOfConfig":"79"},{"size":573,"mtime":1616061809722,"results":"98","hashOfConfig":"79"},{"size":578,"mtime":1616058918503,"results":"99","hashOfConfig":"79"},{"size":611,"mtime":1616058918311,"results":"100","hashOfConfig":"79"},{"size":230,"mtime":1616058917735,"results":"101","hashOfConfig":"79"},{"size":102,"mtime":1616058917891,"results":"102","hashOfConfig":"79"},{"size":888,"mtime":1616058918099,"results":"103","hashOfConfig":"79"},{"size":5497,"mtime":1616058919035,"results":"104","hashOfConfig":"79"},{"size":58,"mtime":1616061809610,"results":"105","hashOfConfig":"79"},{"size":2112,"mtime":1616061809818,"results":"106","hashOfConfig":"79"},{"size":218,"mtime":1616061810122,"results":"107","hashOfConfig":"79"},{"size":1760,"mtime":1616060026740,"results":"108","hashOfConfig":"79"},{"size":796,"mtime":1616060026532,"results":"109","hashOfConfig":"79"},{"size":733,"mtime":1616060026568,"results":"110","hashOfConfig":"79"},{"size":3445,"mtime":1616061809946,"results":"111","hashOfConfig":"79"},{"size":7121,"mtime":1616062149218,"results":"112","hashOfConfig":"79"},{"size":634,"mtime":1616060025972,"results":"113","hashOfConfig":"79"},{"size":757,"mtime":1616060026408,"results":"114","hashOfConfig":"79"},{"size":270,"mtime":1616058919251,"results":"115","hashOfConfig":"79"},{"size":565,"mtime":1616058917795,"results":"116","hashOfConfig":"79"},{"size":518,"mtime":1616058917939,"results":"117","hashOfConfig":"79"},{"size":1372,"mtime":1616058918879,"results":"118","hashOfConfig":"79"},{"size":396,"mtime":1616061809658,"results":"119","hashOfConfig":"79"},{"size":855,"mtime":1616058918147,"results":"120","hashOfConfig":"79"},{"size":985,"mtime":1616058919083,"results":"121","hashOfConfig":"79"},{"size":982,"mtime":1616058918671,"results":"122","hashOfConfig":"79"},{"size":540,"mtime":1615972723849,"results":"123","hashOfConfig":"79"},{"size":344,"mtime":1616062149270,"results":"124","hashOfConfig":"79"},{"size":1659,"mtime":1616060026368,"results":"125","hashOfConfig":"79"},{"size":1727,"mtime":1616060026976,"results":"126","hashOfConfig":"79"},{"size":1734,"mtime":1616060026196,"results":"127","hashOfConfig":"79"},{"size":1654,"mtime":1616060026244,"results":"128","hashOfConfig":"79"},{"size":1771,"mtime":1616060026940,"results":"129","hashOfConfig":"79"},{"size":1761,"mtime":1616060026604,"results":"130","hashOfConfig":"79"},{"size":1578,"mtime":1616061809386,"results":"131","hashOfConfig":"79"},{"size":1727,"mtime":1613647996063,"results":"132","hashOfConfig":"79"},{"size":1729,"mtime":1613647996243,"results":"133","hashOfConfig":"79"},{"size":1461,"mtime":1616061809562,"results":"134","hashOfConfig":"79"},{"size":1439,"mtime":1616061809854,"results":"135","hashOfConfig":"79"},{"size":1360,"mtime":1616061810170,"results":"136","hashOfConfig":"79"},{"size":636,"mtime":1616058918727,"results":"137","hashOfConfig":"79"},{"size":518,"mtime":1616058918047,"results":"138","hashOfConfig":"79"},{"size":423,"mtime":1616058918223,"results":"139","hashOfConfig":"79"},{"size":79,"mtime":1616058918759,"results":"140","hashOfConfig":"79"},{"size":52,"mtime":1616058918187,"results":"141","hashOfConfig":"79"},{"size":88,"mtime":1616058919135,"results":"142","hashOfConfig":"79"},{"size":64,"mtime":1616058918795,"results":"143","hashOfConfig":"79"},{"size":914,"mtime":1616058918267,"results":"144","hashOfConfig":"79"},{"size":6637,"mtime":1616058918951,"results":"145","hashOfConfig":"79"},{"size":2211,"mtime":1616058919183,"results":"146","hashOfConfig":"79"},{"size":245,"mtime":1616058918991,"results":"147","hashOfConfig":"79"},{"size":267,"mtime":1616060026008,"results":"148","hashOfConfig":"79"},{"size":264,"mtime":1616060026872,"results":"149","hashOfConfig":"79"},{"size":3146,"mtime":1616062149310,"results":"150","hashOfConfig":"79"},{"size":84,"mtime":1613645886436,"results":"151","hashOfConfig":"79"},{"size":74,"mtime":1616060026796,"results":"152","hashOfConfig":"79"},{"size":1268,"mtime":1616060026908,"results":"153","hashOfConfig":"79"},{"size":252,"mtime":1615972639970,"results":"154","hashOfConfig":"79"},{"size":2045,"mtime":1616058918843,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1b4cyv9",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"158"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"158"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"158"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"158"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"158"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"158"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"158"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"158"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"158"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"158"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"158"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"158"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"158"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"158"},"/home/developer/projects/using-animation/src/index.js",[],["327","328"],"/home/developer/projects/using-animation/src/reportWebVitals.js",[],"/home/developer/projects/using-animation/src/components/app/index.js",[],"/home/developer/projects/using-animation/src/components/app/App.js",[],"/home/developer/projects/using-animation/src/redux/store.js",[],"/home/developer/projects/using-animation/src/redux/rootSaga.js",[],"/home/developer/projects/using-animation/src/redux/rootReducer.js",[],"/home/developer/projects/using-animation/src/components/auth/index.js",[],["329","330"],"/home/developer/projects/using-animation/src/components/auth/Auth.js",[],"/home/developer/projects/using-animation/src/components/auth/login/index.js",[],"/home/developer/projects/using-animation/src/components/auth/register/index.js",[],"/home/developer/projects/using-animation/src/components/auth/login/Login.js",["331","332"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { getAuthAction } from \"../redux/authActions\";\nimport { onToggleLanguageAction } from \"../../app/redux/appActions\";\nimport ErrorIndicator from \"../../error-indicator\";\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../../translator/translator\";\n\nconst styles = () => ({\n    card: {\n        boxShadow: '7px 7px 10px 5px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\n    },\n    button: {\n        marginBottom: '20px',\n        fontFamily: 'El Missiri',\n    },\n    input: {\n        marginBottom: '20px',\n        width: '100%',\n        maxWidth: '260px',\n        fontFamily: 'El Missiri',\n    },\n    span1: {\n        fontSize: '10px',\n        fontFamily: 'El Missiri',\n    },\n    span2: {\n        fontSize: '10px',\n        fontWeight: 'bold',\n        color: '#3f51b5',\n        cursor: 'pointer',\n        fontFamily: 'El Missiri',\n    },\n    headTitle: {\n        fontSize: '20px',\n        fontWeight: 'bold',\n        marginBottom: '20px',\n        marginTop: '20px',\n        fontFamily: 'El Missiri',\n    }\n});\n\nconst Login = (props) => {\n\n    const dispatch = useDispatch();\n    const userAuth = useSelector(({ authState }) => authState.user);\n    const [ showPass, setShowPass ] = useState(false);\n    const { classes } = props;\n    const [ user, setUser ] = useState({\n        login: \"\",\n        password: \"\"\n    });\n    const authError = useSelector(({ errorIndicatorState }) => errorIndicatorState);\n    const onSubmit = () => {\n        dispatch(getAuthAction(user));\n    };\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    useEffect(() => {\n        console.log(\"login: \", user.login);\n        console.log(\"pass: \", user.password);\n        console.log(\"authError: \", authError);\n    }, [user]);\n\n    const renderLanguageIcons = () => {\n        return translator.map((t, idx) => {\n            return (\n                <IconButton\n                    className={`focus:outline-none mr-10 shadow-lg`}\n                    onClick={() => dispatch(onToggleLanguageAction(t.desc))}\n                    key={idx}>\n                    <div className={`w-20 h-20 flex flex-col justify-center items-center`}>\n                        <img className={`w-full`} alt=\"\" src={t.flag} />\n                    </div>\n                </IconButton>\n            );\n        });\n    };\n\n    if (userAuth) {\n        return <Redirect to=\"/\" />\n    }\n\n    if (authError.error) {\n        return <ErrorIndicator />\n    }\n\n    return (\n        <div className={`relative w-full h-screen overflow-hidden`}>\n            <div className={`absolute top-0 right-0 bottom-0 left-0 flex flex-col justify-center items-center`}>\n                <Card\n                    className={`w-2/3 sm:w-full py-50 flex flex-col justify-center items-center border-2 border-white\n                    rounded ${classes.card}`}>\n                    <div className={`w-full flex justify-center items-center`}>\n                        {renderLanguageIcons()}\n                    </div>\n                    <Typography className={`${classes.headTitle}`}>\n                        {l.loginToYourAccount}\n                    </Typography>\n                    <form className={`w-full flex flex-col justify-center items-center`}>\n                        <TextField\n                            onChange={(e) => setUser({\n                                ...user,\n                                login: e.target.value\n                            })}\n                            required\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-login\"\n                            variant=\"outlined\"\n                            label={l.loginPlaceholder}\n                        />\n\n                        <TextField\n                            onChange={(e) => setUser({\n                                ...user,\n                                password: e.target.value\n                            })}\n                            required\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-password\"\n                            variant=\"outlined\"\n                            type={showPass ? 'text' : 'password'}\n                            label={l.passwordPlaceholder}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            className={`focus:outline-none`}\n                                            onClick={() => setShowPass(!showPass)}\n                                            aria-label=\"Toggle password visibility\"\n                                        >\n                                            {showPass ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <CardActions>\n                            <Button\n                                onClick={() => onSubmit()}\n                                // disabled={login.length <= 3 || pass.length <= 3 }\n                                className={`focus:outline-none ${classes.button}`}\n                                size={`large`}\n                                color={`primary`}\n                                variant={`contained`}>\n                                {l.loginButton}\n                            </Button>\n                        </CardActions>\n                    </form>\n                    <div className={`w-full flex flex-col justify-center items-center`}>\n                        <Typography className={classes.span1}>\n                            {l.dontHaveAnAccount}\n                        </Typography>\n                        <Typography\n                            className={classes.span2}\n                            variant=\"body2\"\n                            gutterBottom>\n                            <Link to=\"/auth/register\">\n                                {l.registrationLink}\n                            </Link>\n                        </Typography>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    );\n};\n\nexport default withStyles(styles)(Login);","/home/developer/projects/using-animation/src/components/auth/register/Register.js",["333"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { getRegisterAction } from \"../redux/authActions\";\nimport { onToggleLanguageAction } from \"../../app/redux/appActions\";\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../../translator/translator\";\n\nconst styles = () => ({\n    card: {\n        boxShadow: '7px 7px 10px 5px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\n    },\n    button: {\n        marginBottom: '20px',\n        fontFamily: 'El Missiri',\n    },\n    input: {\n        marginBottom: '20px',\n        width: '100%',\n        maxWidth: '260px',\n        fontFamily: 'El Missiri',\n    },\n    span1: {\n        fontSize: '10px',\n        fontFamily: 'El Missiri',\n    },\n    span2: {\n        fontSize: '10px',\n        fontWeight: 'bold',\n        color: '#3f51b5',\n        cursor: 'pointer',\n        fontFamily: 'El Missiri',\n    },\n    headTitle: {\n        fontSize: '20px',\n        fontWeight: 'bold',\n        marginBottom: '20px',\n        marginTop: '20px',\n        fontFamily: 'El Missiri',\n    }\n});\n\nconst Register = (props) => {\n\n    const user = useSelector(({ authState }) => authState.user);\n    const [ showPass, setShowPass ] = useState(false);\n    const [ showPassConfirm, setShowPassConfirm ] = useState(false);\n    const { classes } = props;\n    const dispatch = useDispatch();\n    const [ newUser, setNewUser ] = useState({\n        login: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\"\n    });\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    const validateForm = () => {\n        const { login, email, password, passwordConfirm } = newUser;\n        if (\n            login.length >= 3 &&\n            email.length >= 5 &&\n            email.includes(\"@\") &&\n            password.length >= 3 &&\n            passwordConfirm.length >= 3 &&\n            password === passwordConfirm\n        ) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    const getRegister = () => {\n        dispatch(getRegisterAction(newUser))\n    };\n\n    const renderLanguageIcons = () => {\n        return translator.map((t, idx) => {\n            return (\n                <IconButton\n                    className={`focus:outline-none mr-10 shadow-lg`}\n                    onClick={() => dispatch(onToggleLanguageAction(t.desc))}\n                    key={idx}>\n                    <div className={`w-20 h-20 flex flex-col justify-center items-center`}>\n                        <img className={`w-full`} alt=\"\" src={t.flag} />\n                    </div>\n                </IconButton>\n            );\n        });\n    };\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    if (user) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <div className={`relative w-full h-screen overflow-hidden`}>\n            <div className={`absolute top-0 right-0 bottom-0 left-0 flex flex-col justify-center items-center`}>\n                <Card\n                    className={`w-2/3 sm:w-full py-50 flex flex-col justify-center items-center border-2 border-white\n                    rounded ${classes.card}`}>\n                    <div className={`w-full flex justify-center items-center`}>\n                        {renderLanguageIcons()}\n                    </div>\n                    <Typography className={classes.headTitle}>\n                        {l.createAnAccount}\n                    </Typography>\n                    <form className={`w-full flex flex-col justify-center items-center`}>\n\n                        <TextField\n                            required\n                            onChange={(e) => {\n                                setNewUser({\n                                    ...newUser,\n                                    login: e.target.value\n                                });\n                            }}\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-login\"\n                            variant=\"outlined\"\n                            label={l.loginPlaceholder}\n                        />\n\n                        <TextField\n                            required\n                            onChange={(e) => {\n                                setNewUser({\n                                    ...newUser,\n                                    email: e.target.value\n                                });\n                            }}\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-email\"\n                            variant=\"outlined\"\n                            label={l.emailPlaceholder}\n                        />\n\n                        <TextField\n                            required\n                            onChange={(e) => {\n                                setNewUser({\n                                    ...newUser,\n                                    password: e.target.value\n                                });\n                            }}\n                            className={`${classes.input} sm:w-full`}\n                            id=\"outlined-adornment-password\"\n                            variant=\"outlined\"\n                            type={showPass ? 'text' : 'password'}\n                            label={l.passwordPlaceholder}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            className={`focus:outline-none`}\n                                            onClick={() => setShowPass(!showPass)}\n                                            aria-label=\"Toggle password visibility\"\n                                        >\n                                            {showPass ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n\n                        <TextField\n                            required\n                            onChange={(e) => {\n                                setNewUser({\n                                    ...newUser,\n                                    passwordConfirm: e.target.value\n                                });\n                            }}\n                            className={`\n                            ${classes.input} sm:w-full text-blue-600\n                            `}\n                            id=\"outlined-adornment-password-confirm\"\n                            variant={`outlined`}\n                            error={newUser.password !== newUser.passwordConfirm}\n                            type={showPassConfirm ? 'text' : 'password'}\n                            label={l.passwordConfirmPlaceholder}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            className={`focus:outline-none`}\n                                            onClick={() => setShowPassConfirm(!showPassConfirm)}\n                                            aria-label=\"Toggle password visibility\"\n                                        >\n                                            {showPassConfirm ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <CardActions>\n                            <Button\n                                onClick={() => getRegister()}\n                                disabled={validateForm()}\n                                className={`focus:outline-none ${classes.button}`}\n                                size={`large`}\n                                color={`primary`}\n                                variant={`contained`}>\n                                {l.registerButton}\n                            </Button>\n                        </CardActions>\n                    </form>\n                    <div className={`w-full flex flex-col justify-center items-center`}>\n                        <Typography className={classes.span1}>\n                            {l.alreadyHaveAnAccount}\n                        </Typography>\n                        <Typography\n                            className={classes.span2}\n                            variant=\"body2\"\n                            gutterBottom>\n                            <Link to=\"/auth/login\">\n                                {l.loginLink}\n                            </Link>\n                        </Typography>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    );\n};\n\nexport default withStyles(styles)(Register);","/home/developer/projects/using-animation/src/components/home/index.js",[],"/home/developer/projects/using-animation/src/components/home/Home.js",["334","335","336","337","338","339","340","341","342","343","344","345","346"],"import React, { useEffect, useState, useCallback } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Spinner from \"../spinner\";\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport PersonIcon from '@material-ui/icons/PermIdentity';\nimport WorkOutlineIcon from '@material-ui/icons/WorkOutline';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport AssignmentIndOutlinedIcon from '@material-ui/icons/AssignmentIndOutlined';\nimport CollectionsIcon from '@material-ui/icons/Collections';\nimport FormatPaintIcon from '@material-ui/icons/FormatPaint';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport routes from \"../../configs/routes\";\nimport ErrorIndicator from \"../error-indicator\";\nimport { logoutAction } from \"../auth/redux/authActions\";\nimport { onToggleLanguageAction } from \"../app/redux/appActions\";\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../translator/translator\";\nimport {activeAlertIndicatorAction} from \"../alert-indicator/redux/alertIndicatorActions\";\nimport { renderLanguageIcons } from \"../../translator/example\";\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        flexShrink: 1,\n        display: \"flex\",\n        fontFamily: 'El Missiri',\n    },\n    grow: {\n        // flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n        fontFamily: 'El Missiri',\n    },\n    userMenu: {\n        marginLeft: -12,\n        marginRight: 50,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        marginLeft: theme.spacing(9),\n        fontFamily: 'El Missiri',\n    },\n    navBar: {\n        display: \"flex\",\n        flexShrink: 1,\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n    elMissiri: {\n        fontFamily: 'El Missiri',\n    },\n    elMissiriBold: {\n        fontFamily: 'El Missiri',\n        fontWeight: 'bold',\n    },\n});\n\nconst Home = ({ classes, theme }) => {\n\n    const [ anchorEl, setAnchorEl ] = useState(null);\n    const [ openDrawer, setOpenDrawer ] = useState(false);\n    const [ openUserMenu, setOpenUserMenu ] = useState(false);\n    const authError = useSelector(({ errorIndicatorState }) => errorIndicatorState.error);\n\n    const user = useSelector(({ authState }) => authState.user);\n    const alertIndicator = useSelector(({ alertIndicatorState }) => alertIndicatorState.alertIndicator);\n    const dispatch = useDispatch();\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    const naviItems = [\n        {\n            desc: l.homeNaviItemsDesc,\n            icon: <HomeOutlinedIcon />,\n            path: '/',\n        },\n        {\n            desc: l.profileNaviItemsDesc,\n            icon: <PersonIcon />,\n            path: '/profile',\n        },\n        {\n            desc: l.worksNaviItemsDesc,\n            icon: <WorkOutlineIcon />,\n            path: '/works',\n        },\n        {\n            desc: l.collection,\n            icon: <CollectionsIcon />,\n            path: '/collection',\n        },\n        {\n            desc: 'Meme generator',\n            icon: <FormatPaintIcon />,\n            path: '/meme-gen',\n        },\n    ];\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpenUserMenu(true);\n    };\n\n    const handleClose = () => {\n        setOpenUserMenu(false);\n        setAnchorEl(null);\n    };\n\n    const handleDrawerOpen = () => {\n        setOpenDrawer(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpenDrawer(false);\n    };\n\n    const testAlertMessage = \"Alert Indicator is work! dfhdhhe dfhdffheheht dfdhethet bcvbcvcv fgererhdfdfb\";\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    if (!user) {\n        return <Redirect to=\"/auth/login\" />\n    }\n\n    if (authError) {\n        return <ErrorIndicator />\n    }\n\n    // const testLog = useCallback((val) => {\n    //     setScreen(val);\n    //     console.log('val: ', val);\n    // }, [screen]);\n\n    const testLog = (val) => {\n        console.log('val: ', val);\n        return val;\n    }\n    const useTestLog = (val) => {\n        const [ screen, setScreen ] = useState('lg');\n        useEffect(() => {\n            let cancelled = false;\n            !cancelled && setScreen(() => testLog(val));\n            return () => cancelled = true;\n        }, [val]);\n    };\n\n    return (\n        <div>\n            <div className={`${classes.root}`}>\n                <Drawer\n                    variant=\"permanent\"\n                    className={classNames(classes.drawer, {\n                        [classes.drawerOpen]: openDrawer,\n                        [classes.drawerClose]: !openDrawer,\n                    })}\n                    classes={{\n                        paper: classNames({\n                            [classes.drawerOpen]: openDrawer,\n                            [classes.drawerClose]: !openDrawer,\n                        }),\n                    }}\n                    open={openDrawer}\n                >\n                    <div className={`${classes.toolbar}`}>\n                        <IconButton\n                            className={`focus:outline-none`}\n                            onClick={handleDrawerClose}>\n                            {theme.direction === 'rtl' ? openDrawer && <ChevronRightIcon /> : openDrawer && <ChevronLeftIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        {\n                            naviItems.map((nav, index) => {\n                                if (nav.path === '/collection' && user.role !== 'admin') {\n                                    return null;\n                                }\n                                return (\n                                    <Link to={nav.path} key={index}>\n                                        <ListItem button>\n                                          <ListItemIcon>{nav.icon}</ListItemIcon>\n                                          {/*<ListItemText*/}\n                                          {/*  className={classes.elMissiri}*/}\n                                          {/*  primary={nav.desc}*/}\n                                          {/*/>*/}\n                                          <Typography className={`${classes.elMissiriBold}`}>\n                                              {nav.desc}\n                                          </Typography>\n                                        </ListItem>\n                                    </Link>\n                                )}\n                            )\n                        }\n                    </List>\n                </Drawer>\n                <AppBar\n                    position=\"static\" className={`w-full flex-shrink`}\n                >\n                    <Toolbar className={classes.navBar}>\n                        <div className={`flex justify-center items-center`}>\n                            <IconButton\n                                onClick={handleDrawerOpen}\n                                className={`focus:outline-none`}\n                                color=\"inherit\"\n                                aria-label=\"Menu\">\n                                <MenuIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                                {l.home}\n                            </Typography>\n                        </div>\n\n                        <div className={`flex flex-col justify-center items-center`}>\n                            <div className={`flex pr-50`}>\n                                {renderLanguageIcons(dispatch)}\n                            </div>\n                            <div>\n                                <span className={`mr-10 font-bold sm:hidden`}>{user.userName}</span>\n                                <IconButton\n                                    className={`${classes.userMenu} focus:outline-none sm:mr-40`}\n                                    aria-owns={openUserMenu ? 'menu-appbar' : undefined}\n                                    aria-haspopup=\"true\"\n                                    onClick={handleMenu}\n                                    color=\"inherit\"\n                                >\n                                    {user.avatar ?\n                                        <div className={`w-30 h-30`}>\n                                            <img className={`w-full rounded-full`} src={user.avatar} alt=\"\" />\n                                        </div> :\n                                        <AccountCircle />}\n                                </IconButton>\n                            </div>\n                        </div>\n\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={openUserMenu}\n                            onClose={handleClose}\n                        >\n                            <MenuItem onClick={handleClose}>\n                                <SettingsOutlinedIcon fontSize=\"small\" color=\"action\" className={`mr-10`} />\n                                <div className={``}>\n                                    {l.settingsMenuItem}\n                                </div>\n                            </MenuItem>\n                            <MenuItem onClick={() => dispatch(logoutAction())}>\n                                <ExitToAppOutlinedIcon fontSize=\"small\" color=\"action\" className={`mr-10`} />\n                                {l.logoutMenuItem}\n                            </MenuItem>\n                            {user.role === \"admin\" &&\n                            <Link to=\"/admin\">\n                                <MenuItem>\n                                    <AssignmentIndOutlinedIcon fontSize=\"small\" color=\"action\" className={`mr-10`} />\n                                    {l.adminPanelMenuItem}\n                                </MenuItem>\n                            </Link>}\n                        </Menu>\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <div className={`${classes.content} w-full flex justify-start m-20`}>\n                <Button\n                    variant=\"contained\"\n                    className={`p-10 focus:outline-none color-primary`}\n                    disabled={alertIndicator}\n                    onClick={() => dispatch(activeAlertIndicatorAction(testAlertMessage))}>\n                    {l.testAlertIndicatorButton}\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Home);\n\n","/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorReducer.js",[],"/home/developer/projects/using-animation/src/components/error-indicator/index.js",[],"/home/developer/projects/using-animation/src/components/error-indicator/ErrorIndicator.js",["347"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { closeErrorIndicatorAction } from \"./redux/errorIndicatorActions\";\n\n// function Transition(props) {\n//     return <Slide direction=\"up\" {...props} />;\n// }\n\nconst ErrorIndicator = () => {\n\n    const [open, setOpen] = useState(true);\n    const errorState = useSelector(({ errorIndicatorState }) => errorIndicatorState);\n    const dispatch = useDispatch();\n\n    // const handleClickOpen = () => {\n    //     setOpen(true);\n    // };\n\n    const handleClose = () => {\n        setOpen(false);\n        dispatch(closeErrorIndicatorAction());\n    };\n    return (\n        <div>\n            <Dialog\n                open={open}\n                // TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    {errorState.titleError}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {errorState.messageError}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Link to=\"/auth/login\">\n                        <Button onClick={handleClose} color=\"primary\">\n                            Agree\n                        </Button>\n                    </Link>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default ErrorIndicator;","/home/developer/projects/using-animation/src/components/spinner/index.js",[],"/home/developer/projects/using-animation/src/components/spinner/Spinner.js",[],"/home/developer/projects/using-animation/src/components/app/redux/appReducer.js",[],"/home/developer/projects/using-animation/src/components/auth/AuthConfig.js",[],"/home/developer/projects/using-animation/src/components/app/AppConfig.js",[],"/home/developer/projects/using-animation/src/components/auth/authRoles.js",[],"/home/developer/projects/using-animation/src/components/admin/AdminConfig.js",[],"/home/developer/projects/using-animation/src/components/admin/Admin.js",["348","349","350","351","352","353","354","355","356","357","358","359","360"],"import React, { useState, useEffect, useCallback, useMemo } from \"react\";\n\nimport { Redirect, Link, Switch, Route } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Spinner from \"../spinner\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport { adminGetUsersAction, adminTestActionChannelAction } from \"./redux/adminActions\";\nimport { onToggleLanguageAction } from \"../app/redux/appActions\";\nimport { logoutAction } from \"../auth/redux/authActions\";\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../translator/translator\";\nimport AdminConfig from \"./AdminConfig\";\nimport AssignmentIndOutlinedIcon from \"@material-ui/icons/AssignmentIndOutlined\";\nimport PeopleIcon from '@material-ui/icons/People'; /*UsersIcon*/\nimport BarChartIcon from '@material-ui/icons/BarChart'; /*AnalyticsIcon*/\nimport TouchAppIcon from '@material-ui/icons/TouchApp'; /*TestBufferChannelIcon*/\nimport { renderLanguageIcons } from \"../../translator/example\";\n\nconst Admin = () => {\n\n    const user = useSelector(({ authState }) => authState.user);\n    const adminState = useSelector(({ adminState }) => adminState);\n    const { loading, loaded, usersEntity, testBufferCounter } = adminState;\n    const dispatch = useDispatch();\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n    const [ routes, setRoutes ] = useState(null);\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    useEffect(() => {\n        if (Object.keys(l).length)  {\n            setRoutes([\n            {\n                title: l.testBufferChannelButton,\n                background: \"bg-blue-300\",\n                hover: \"hover:bg-blue-400\",\n                path: \"/admin/test-buffer-channel\"\n            },\n            {\n                title: l.usersButton,\n                background: \"bg-green-400\",\n                hover: \"hover:bg-green-500\",\n                path: \"/admin/users\"\n            },\n            {\n                title: l.analyticsButton,\n                background: \"bg-red-400\",\n                hover: \"hover:bg-red-500\",\n                path: \"/admin/analytics\"\n            }\n        ])}\n    }, [l]);\n\n    useEffect(() => {\n        if (!usersEntity) {\n            dispatch(adminGetUsersAction());\n        }\n    }, []);\n\n    const renderRoutes = () => {\n        return routes.map((route, idx) => {\n            return (\n                <Link key={idx} to={route.path} className={`p-10 shadow-lg rounded-full my-20 mx-5`}>\n                    <div\n                         className={`\n                     w-100 h-100 sm:h-50 sm:w-50 rounded-full cursor-pointer text-center\n                     ${route.background} flex flex-col justify-center \n                     items-center font-bold text-xs ${route.hover}\n                     transition transform duration-100 ease-in-out hover:scale-125\n                `}>\n                        <div>{route.title}</div>\n                    </div>\n                </Link>\n            );\n        });\n    };\n\n    // if (!users) {\n    //     return <Spinner />\n    // }\n\n    if (!user) {\n        return <Redirect to=\"/auth/login\" />\n    }\n\n    return (\n        <div\n          className={`\n          w-full flex flex-col justify-start items-center p-20 sm:items-start overflow-auto\n          `}>\n            <div className={`w-full flex justify-between items-center sm:flex-wrap sm:justify-center`}>\n                <div\n                  className={`\n                  flex justify-center items-center text-white font-bold whitespace-nowrap ml-10 sm:ml-0\n                  `}>\n                    <AssignmentIndOutlinedIcon fontSize=\"small\" className={`mr-10`} />\n                    <div className={`mt-4`}>{l.adminDashboard}</div>\n                </div>\n                <div className={`w-full flex justify-end items-center mr-20 sm:mr-0 sm:flex-wrap sm:justify-center`}>\n                    {renderLanguageIcons(dispatch)}\n                    <div className={`flex order-2`}>\n                        <Link to=\"/\">\n                            <IconButton\n                              className={`focus:outline-none mr-10 shadow-lg`}>\n                                <HomeIcon className={`text-white`}/>\n                            </IconButton>\n                        </Link>\n                        <IconButton\n                          onClick={() => dispatch(logoutAction())}\n                          className={`focus:outline-none shadow-lg`}>\n                            <ExitToAppIcon className={`text-white`}/>\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n            <div className={`w-full flex justify-center items-center shadow-lg`}>\n                {routes && renderRoutes()}\n            </div>\n            <Switch>\n                {AdminConfig.routes.map((route, idx) => {\n                    return <Route key={idx} role={route.role} path={route.path} exact={route.exact} component={route.component} />\n                })}\n            </Switch>\n        </div>\n    );\n};\n\nexport default Admin;","/home/developer/projects/using-animation/src/components/no-match/index.js",[],"/home/developer/projects/using-animation/src/components/no-match/NoMatch.js",["361"],"import React, { useState, useEffect } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { eng } from \"./translate/eng\";\nimport { rus } from \"./translate/rus\";\nimport { ukr } from \"./translate/ukr\";\nimport { translator } from \"../../translator/translator\";\n\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst NoMatch = () => {\n\n    const history = useHistory();\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    return (\n        <Dialog\n            open={true}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {l.label}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {l.desc}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant={`contained`}\n                    color=\"primary\">\n                    <Link to=\"/auth/login\">\n                        {l.loginLink}\n                    </Link>\n                </Button>\n                <Button\n                    variant={`contained`}\n                    onClick={() => history.goBack()}\n                    color=\"primary\">\n                    {l.goBackButton}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default NoMatch;","/home/developer/projects/using-animation/src/components/no-match/NoMatchConfig.js",[],"/home/developer/projects/using-animation/src/components/auth/redux/authSaga.js",[],"/home/developer/projects/using-animation/src/components/auth/redux/authReducer.js",[],"/home/developer/projects/using-animation/src/components/auth/redux/authActions.js",[],"/home/developer/projects/using-animation/src/services/serviceApi.js",["362"],"import { dummyUsers } from \"./fake-data/dummyUsers\";\nimport {getErrorWorker} from \"../components/error-indicator/redux/errorIndicatorSaga\";\n\nexport default class ServiceApi{\n\n    getLogin = (user, realData) => {\n        const { login, password } = user;\n\n        if (!realData) {\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                        const user = dummyUsers.find((user) => user.userName.toString() === login.toString() &&\n                        user.password.toString() === password.toString());\n                        if (user) {\n                            resolve(user);\n                        } else {\n                            resolve(null);\n                        }\n                    }, 700);\n            })\n                .then((res) => {\n                    if (Math.random() > 0.75) {\n                        return null;\n                    }\n                    return res;\n                })\n                .catch(() => {\n                    return null;\n                });\n        }\n    };\n\n    createNewUser = (newUser, realData) => {\n        const { login, email, password } = newUser;\n        if (!realData) {\n            const users = dummyUsers;\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    const checkLogin = users.find((user) => user.userName.toString() === login.toString());\n                    const checkEmail = users.find((user) => user.userEmail.toString() === email.toString());\n                    const newUser = {\n                        id: users.length,\n                        role: \"user\",\n                        userName: login,\n                        userEmail: email,\n                        password: password,\n                        token: `eexxaammppllee%ttookkeenn#${users.length}`,\n                        refreshToken: `eexxaammppllee%rreeffrreesshh%ttookkeenn#${users.length}`\n                    };\n                    if (checkLogin) {\n                        resolve({\n                            error: true,\n                            messageError: \"A user with this login already exists\",\n                            titleError: \"Registration error!\"\n                        });\n                    } else if (checkEmail) {\n                        resolve({\n                            error: true,\n                            messageError: \"A user with this email already exists\",\n                            titleError: \"Registration error!\"\n                        });\n                    } else {\n                        dummyUsers.push(newUser);\n                        resolve(newUser);\n                    }\n                }, 700);\n            })\n                .then((res) => {\n                    if (Math.random() > 0.75) {\n                        return {\n                            error: true,\n                            messageError: \"An error occurred on the server, please try again\",\n                            titleError: \"Server error!\"\n                        };\n                    }\n                    return res;\n                })\n                .catch(() => {\n                    return {\n                        error: true,\n                        messageError: \"An error occurred on the server, please try again\",\n                        titleError: \"Server error!\"\n                    };\n                });\n        }\n    };\n\n}","/home/developer/projects/using-animation/src/services/fake-data/dummyUsers.js",[],"/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorActions.js",[],"/home/developer/projects/using-animation/src/components/error-indicator/redux/errorIndicatorSaga.js",[],"/home/developer/projects/using-animation/src/components/app/redux/appActions.js",[],"/home/developer/projects/using-animation/src/components/admin/redux/adminReducer.js",[],"/home/developer/projects/using-animation/src/components/admin/redux/adminActions.js",[],"/home/developer/projects/using-animation/src/components/admin/redux/adminSaga.js",[],"/home/developer/projects/using-animation/src/services/adminApi.js",["363"],"import { dummyUsers } from \"./fake-data/dummyUsers\";\n\nexport default class AdminApi {\n\n    getUsers = (realData) => {\n        if (!realData) {\n\n        }\n    };\n\n}","/home/developer/projects/using-animation/src/components/admin/translate/eng.js",[],"/home/developer/projects/using-animation/src/components/admin/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/admin/translate/ukr.js",[],"/home/developer/projects/using-animation/src/configs/routes.js",[],"/home/developer/projects/using-animation/src/translator/translator.js",[],"/home/developer/projects/using-animation/src/components/auth/login/translate/eng.js",[],"/home/developer/projects/using-animation/src/components/auth/login/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/auth/login/translate/ukr.js",[],"/home/developer/projects/using-animation/src/components/auth/register/translate/eng.js",["364"],"export const eng = {\n    A: \"=====>\",\n    alreadyHaveAnAccount: \"Already have an account?\",\n\n    B: \"=====>\",\n    bFirstLetter: \"B first letter\",\n\n    C: \"=====>\",\n    createAnAccount: \"CREATE AN ACCOUNT\",\n\n    D: \"=====>\",\n    dFirstLetter: \"D first letter\",\n\n    E: \"=====>\",\n    emailPlaceholder: \"E-mail\",\n\n    F: \"=====>\",\n    fFirstLetter: \"F first letter\",\n\n    G: \"=====>\",\n    gFirstLetter: \"G first letter\",\n\n    H: \"=====>\",\n    hFirstLetter: \"H first letter\",\n\n    I: \"=====>\",\n    iFirstLetter: \"I first letter\",\n\n    J: \"=====>\",\n    jFirstLetter: \"J first letter\",\n\n    K: \"=====>\",\n    kFirstLetter: \"K first letter\",\n\n    L: \"=====>\",\n    loginPlaceholder: \"Login\",\n    loginLink: \"Login\",\n\n    M: \"=====>\",\n    mFirstLetter: \"M first letter\",\n\n    N: \"=====>\",\n    nFirstLetter: \"N first letter\",\n\n    O: \"=====>\",\n    oFirstLetter: \"O first letter\",\n\n    P: \"=====>\",\n    passwordPlaceholder: \"Password\",\n    passwordConfirmPlaceholder: \"Password(Confirm)\",\n\n    Q: \"=====>\",\n    qFirstLetter: \"Q first letter\",\n\n    R: \"=====>\",\n    registerButton: \"REGISTER\",\n\n    S: \"=====>\",\n    sFirstLetter: \"S first letter\",\n\n    T: \"=====>\",\n    tFirstLetter: \"T first letter\",\n\n    U: \"=====>\",\n    uFirstLetter: \"U first letter\",\n\n    V: \"=====>\",\n    vFirstLetter: \"V first letter\",\n\n    W: \"=====>\",\n    wFirstLetter: \"W first letter\",\n\n    X: \"=====>\",\n    xFirstLetter: \"X first letter\",\n\n    Y: \"=====>\",\n    yFirstLetter: \"Y first letter\",\n\n    Z: \"=====>\",\n    zFirstLetter: \"Z first letter\",\n};","/home/developer/projects/using-animation/src/components/auth/register/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/auth/register/translate/ukr.js",[],"/home/developer/projects/using-animation/src/components/home/translate/eng.js",[],"/home/developer/projects/using-animation/src/components/home/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/home/translate/ukr.js",[],"/home/developer/projects/using-animation/src/components/no-match/translate/rus.js",[],"/home/developer/projects/using-animation/src/components/no-match/translate/ukr.js",[],"/home/developer/projects/using-animation/src/components/no-match/translate/eng.js",[],"/home/developer/projects/using-animation/src/components/alert-indicator/redux/alertIndicatorSaga.js",[],"/home/developer/projects/using-animation/src/components/alert-indicator/redux/alertIndicatorReducer.js",[],"/home/developer/projects/using-animation/src/components/alert-indicator/redux/alertIndicatorActions.js",[],"/home/developer/projects/using-animation/src/components/alert-indicator/index.js",[],"/home/developer/projects/using-animation/src/components/admin/components/users/index.js",[],"/home/developer/projects/using-animation/src/components/admin/components/test-buffer-channel/index.js",[],"/home/developer/projects/using-animation/src/components/admin/components/analytics/index.js",[],"/home/developer/projects/using-animation/src/components/alert-indicator/AlertIndicator.js",[],"/home/developer/projects/using-animation/src/components/admin/components/users/Users.js",["365"],"import React, { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { eng } from '../../translate/eng';\nimport { rus } from '../../translate/rus';\nimport { ukr } from '../../translate/ukr';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport ModalConfirm from '../../../custom-collection/modals/confirm';\n\nconst Users = () => {\n\n    const dispatch = useDispatch();\n    const adminState = useSelector(({ adminState }) => adminState);\n    const language = useSelector(({ appState }) => appState.language);\n    const { usersEntity } = adminState;\n    const { users, ids } = usersEntity;\n    const [ l, setL ] = useState({});\n    const [ lockUserModalConfirm, setLockUserModalConfirm ] = useState({\n        active: false,\n        id: null,\n        message: '',\n        action: null,\n        confirmButtonName: '',\n    });\n    const [ activeCell, setActiveCell ] = useState(null);\n    const onToggleUserLock = (id) => {\n        const buttonName = users[id].locked ? 'Lock' : 'Unlock';\n        const confirmMessage = users[id].locked ? 'To unblock this user?' : 'To block this user?';\n        setLockUserModalConfirm({\n            ...lockUserModalConfirm,\n            active: true,\n            id: id,\n            confirmButtonName: buttonName,\n            message: confirmMessage,\n        });\n    };\n\n    const renderUsersTable = () => {\n        return (\n            <div className={`w-full sm:h-300 flex overflow-auto`}>\n                <table\n                  className={`\n                  w-full text-white border-t border-white whitespace-nowrap\n                  `}>\n                <thead className={`w-full border-b border-white`}>\n                    <tr className={`text-center`}>\n                        <td className={`pr-10`}>id</td>\n                        <td>avatar</td>\n                        <td>name</td>\n                        <td>email</td>\n                        <td>role</td>\n                        <td>actions</td>\n                    </tr>\n                </thead>\n                <tbody className={`overflow-auto`}>\n                    {ids.map((id) => {\n                        return (\n                            <tr\n                                key={id}\n                                onClick={() => setActiveCell(id)}\n                                className={`\n                                hover:bg-blue-500 text-center\n                                ${activeCell === id && `bg-blue-500`}\n                                `}>\n                                <td className={`pr-10`}>{users[id].id}</td>\n                                <td className={`w-20 h-20 pr-10`}>\n                                    <img alt=\"\" src={users[id].avatar} className={`w-full rounded-full my-5`}/>\n                                </td>\n                                <td className={`pr-10`}>{users[id].userName}</td>\n                                <td className={`pr-10`}>{users[id].userEmail}</td>\n                                <td className={`pr-10`}>{users[id].role}</td>\n                                <td>\n                                    <div className={`flex justify-center items-center`}>\n                                        <IconButton className={`focus:outline-none`}>\n                                            {\n                                                users[id].locked ?\n                                                <Tooltip title={`unlocked?`} placement=\"left-start\" arrow>\n                                                    <LockIcon\n                                                      className={`text-red-600 hover:text-gray-700`}\n                                                      onClick={() => onToggleUserLock(id)}\n                                                    />\n                                                </Tooltip> :\n                                                <Tooltip title={`locked?`} placement=\"left-start\" arrow>\n                                                    <LockOpenIcon\n                                                      className={`text-white hover:text-gray-700`}\n                                                      onClick={() => onToggleUserLock(id)}\n                                                    />\n                                                </Tooltip>\n                                            }\n                                        </IconButton>\n                                        <IconButton className={`focus:outline-none`}>\n                                            <Tooltip title={`read?`} placement=\"left-start\" arrow>\n                                                <MailOutlineIcon\n                                                  className={`text-white hover:text-gray-700`}\n                                                />\n                                            </Tooltip>\n                                        </IconButton>\n                                        <IconButton className={`focus:outline-none`}>\n                                            <Tooltip title={`delete?`} placement=\"left-start\" arrow>\n                                                <DeleteOutlineIcon\n                                                  className={`text-white hover:text-gray-700`}\n                                                />\n                                            </Tooltip>\n                                        </IconButton>\n                                    </div>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n            </div>\n        );\n    };\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    return (\n        <div\n          className={`\n          w-full flex flex-col justify-center items-center sm:items-start\n          `}\n        >\n            <div className={`font-bold text-white my-10`}>\n                {l.usersComponentHeader}\n            </div>\n            {renderUsersTable()}\n            {lockUserModalConfirm.active && <ModalConfirm data={lockUserModalConfirm} onClose={setLockUserModalConfirm} />}\n        </div>\n    );\n};\n\nexport default Users;","/home/developer/projects/using-animation/src/components/admin/components/test-buffer-channel/TestBufferChannel.js",["366"],"import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { eng } from \"../../translate/eng\";\nimport { rus } from \"../../translate/rus\";\nimport { ukr } from \"../../translate/ukr\";\nimport { translator } from \"../../../../translator/translator\";\nimport {adminTestActionChannelAction} from \"../../redux/adminActions\";\n\nconst TestBufferChannel = () => {\n\n    const dispatch = useDispatch();\n    const language = useSelector(({ appState }) => appState.language);\n    const adminState = useSelector(({ adminState }) => adminState);\n    const { testBufferCounter } = adminState;\n    const [ l, setL ] = useState({});\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    return (\n        <div className={`w-full p-20 flex flex-col justify-center items-center`}>\n            <div>\n                TestBufferChannel Component\n            </div>\n            <div className={`flex mt-40 sm:flex-col sm:justify-center sm:items-center`}>\n                <div className={`w-100 h-50 flex flex-col justify-center items-center bg-white rounded m-15 relative`}>\n                    {testBufferCounter}\n                    <div className={`absolute -top-15 text-xs text-white font-bold whitespace-nowrap`}>\n                        {l.testBufferChannel}\n                    </div>\n                </div>\n                <div\n                    className={`p-15 w-300 h-50 cursor-pointer rounded m-15 relative`}>\n                    <div\n                        onClick={() => dispatch(adminTestActionChannelAction())}\n                        className={`z-20 absolute w-full top-0 right-o bottom-0 left-0`}/>\n                    <div className={`\n                    z-10 absolute w-full top-0 right-o bottom-0 left-0 bg-white rounded flex flex-col justify-center \n                    items-center\n                    `}>\n                        {l.pressSeveralTimesQuickly}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TestBufferChannel;","/home/developer/projects/using-animation/src/components/admin/components/analytics/Analytics.js",[],"/home/developer/projects/using-animation/src/components/custom-collection/CustomCollectionConfig.js",[],"/home/developer/projects/using-animation/src/components/custom-collection/CustomCollection.js",[],"/home/developer/projects/using-animation/src/translator/example.js",["367"],"import React from 'react';\n\nimport { translator } from \"./translator\";\nimport { onToggleLanguageAction } from \"../components/app/redux/appActions\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst eng = {\n    // A:\n    // aFirstLetter: \"A first letter\",\n\n    // B:\n    // bFirstLetter: \"B first letter\",\n\n    // C:\n    // cFirstLetter: \"C first letter\",\n\n    // D:\n    // dFirstLetter: \"D first letter\",\n\n    // E:\n    // exampleString: \"Example string\",\n\n    // F:\n    // fFirstLetter: \"F first letter\",\n\n    // G:\n    // gFirstLetter: \"G first letter\",\n\n    // H:\n    // hFirstLetter: \"H first letter\",\n\n    // I:\n    // iFirstLetter: \"I first letter\",\n\n    // J:\n    // jFirstLetter: \"J first letter\",\n\n    // K:\n    // kFirstLetter: \"K first letter\",\n\n    // L:\n    // lFirstLetter: \"L first letter\",\n\n    // M:\n    // mFirstLetter: \"M first letter\",\n\n    // N:\n    // nFirstLetter: \"N first letter\",\n\n    // O:\n    // oFirstLetter: \"O first letter\",\n\n    // P:\n    // pFirstLetter: \"P first letter\",\n\n    // Q:\n    // qFirstLetter: \"Q first letter\",\n\n    // R:\n    // rFirstLetter: \"R first letter\",\n\n    // S:\n    // sFirstLetter: \"S first letter\",\n\n    // T:\n    // tFirstLetter: \"T first letter\",\n\n    // U:\n    // uFirstLetter: \"U first letter\",\n\n    // V:\n    // vFirstLetter: \"V first letter\",\n\n    // W:\n    // wFirstLetter: \"W first letter\",\n\n    // X:\n    // xFirstLetter: \"X first letter\",\n\n    // Y:\n    // yFirstLetter: \"Y first letter\",\n\n    // Z:\n    // zFirstLetter: \"Z first letter\",\n};\n\n//using:\n\n/*\n    import { eng } from \"./translate/eng\";\n    import { rus } from \"./translate/rus\";\n    import { ukr } from \"./translate/ukr\";\n    import { translator } from \"../../translator/translator\";\n\n    const dispatch = useDispatch();\n    const language = useSelector(({ appState }) => appState.language);\n    const [ l, setL ] = useState({});\n\n    useEffect(() => {\n        if (language === \"eng\") {\n            setL(eng);\n        }\n        if (language === \"rus\") {\n            setL(rus);\n        }\n        if (language === \"ukr\") {\n            setL(ukr);\n        }\n    }, [language]);\n\n    const renderLanguageIcons = () => {\n        return translator.map((t, idx) => {\n            return (\n                <IconButton\n                    className={`focus:outline-none mr-10 shadow-lg`}\n                    onClick={() => dispatch(onToggleLanguageAction(t.desc))}\n                    key={idx}>\n                    <div className={`w-20 h-20 flex flex-col justify-center items-center`}>\n                        <img className={`w-full`} alt=\"\" src={t.flag} />\n                    </div>\n                </IconButton>\n            );\n        });\n    };\n */\n\nexport const renderLanguageIcons = (dispatch) => {\n  return translator.map((t, idx) => {\n    return (\n      <IconButton\n        className={`focus:outline-none mr-10 shadow-lg`}\n        onClick={() => dispatch(onToggleLanguageAction(t.desc))}\n        key={idx}>\n        <div className={`w-20 h-20 flex flex-col justify-center items-center`}>\n          <img className={`w-full`} alt=\"\" src={t.flag} />\n        </div>\n      </IconButton>\n    );\n  });\n};","/home/developer/projects/using-animation/src/components/custom-collection/index.js",[],["368","369"],"/home/developer/projects/using-animation/src/components/custom-collection/modals/confirm/index.js",[],"/home/developer/projects/using-animation/src/components/custom-collection/modals/confirm/ModalConfirm.js",["370","371","372"],"import React from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nconst ModalConfirm = ({ data, onClose }) => {\n\n  const { id, active, message, action, confirmButtonName } = data;\n\n  const dispatch = useDispatch();\n  const onCloseModalConfirm = () => {\n    return onClose({\n      active: false,\n      id: null,\n      message: '',\n      action: null,\n      confirmButtonName: '',\n    });\n  };\n\n  return (\n    <div className={`fixed top-0 right-0 bottom-0 left-0 flex flex-col justify-center items-center`}>\n      <div\n        className=\"\n        z-30 fixed top-0 right-0 bottom-0 left-0 bg-gray-900 opacity-75 flex flex-col justify-center items-center p-2\"\n      />\n      <div className={`relative w-300 h-300 flex flex-col justify-center items-center`}>\n        <div\n        className={`\n        absolute top-0 right-0 bottom-0 left-0 border border-white rounded flex flex-col justify-center items-center\n        z-40 text-white\n        `}\n        >\n          ModalConfirm\n          <div>\n            {message}\n          </div>\n          <div>\n            <div onClick={() => onCloseModalConfirm()}>cancel</div>\n            <div onClick={() => dispatch(action(data))}>ok</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalConfirm;\n","/home/developer/projects/using-animation/src/components/meme-gen/MemeGenConfig.js",[],"/home/developer/projects/using-animation/src/components/meme-gen/MemeGen.js",["373","374"],"import React, { useState, useEffect, useRef } from 'react';\n\nimport ImageEditor from '@toast-ui/react-image-editor';\nimport download from 'downloadjs';\nimport 'tui-image-editor/dist/tui-image-editor.css';\n\nconst MemeGen = () => {\n\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const imageEditor = useRef();\n\n  const saveImageToDisk = () => {\n    const imageEditorInst = imageEditor.current.imageEditorInst;\n    const data = imageEditorInst.toDataURL();\n    if (data) {\n      const mimeType = data.split(';')[0];\n      const extension = data.split(';')[0].split('/')[1];\n      download(data, `image.${extension}`, mimeType);\n    }\n  };\n\n  const myTheme = {\n    'menu.backgroundColor': 'white',\n    'common.backgroundColor': '#151515',\n    'downloadButton.backgroundColor': 'white',\n    'downloadButton.borderColor': 'white',\n    'downloadButton.color': 'black',\n    // \"menu.normalIcon.path\": icond,\n    // \"menu.activeIcon.path\": iconb,\n    // \"menu.disabledIcon.path\": icona,\n    // \"menu.hoverIcon.path\": iconc,\n  };\n\n  return (\n    <div className=\"w-full flex flex-col justify-center items-center p-20\">\n      <div className=\"w-full flex flex-col justify-center items-center text-white\">\n        <h1>Photo Editor</h1>\n        <div\n          className=\"\"\n          onClick={saveImageToDisk}>\n          Save Image to Disk\n        </div>\n      </div>\n      <ImageEditor\n        includeUI={{\n          loadImage: {\n            path: imageSrc,\n            name: 'image',\n          },\n          theme: myTheme,\n          menu: ['crop', 'flip', 'rotate', 'draw', 'shape', 'text', 'filter'],\n          initMenu: '',\n          uiSize: {\n            height: `calc(100vh - 160px)`,\n            width: '100%',\n          },\n          menuBarPosition: 'bottom',\n        }}\n        cssMaxHeight={window.innerHeight}\n        cssMaxWidth={window.innerWidth}\n        selectionStyle={{\n          cornerSize: 20,\n          rotatingPointOffset: 70,\n        }}\n        usageStatistics={true}\n        ref={imageEditor}\n      />\n    </div>\n  );\n};\n\nexport default MemeGen;\n",{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"375","replacedBy":"379"},{"ruleId":"377","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":8,"column":8,"nodeType":"383","messageId":"384","endLine":8,"endColumn":19},{"ruleId":"385","severity":1,"message":"386","line":92,"column":8,"nodeType":"387","endLine":92,"endColumn":14,"suggestions":"388"},{"ruleId":"381","severity":1,"message":"382","line":8,"column":8,"nodeType":"383","messageId":"384","endLine":8,"endColumn":19},{"ruleId":"381","severity":1,"message":"389","line":1,"column":38,"nodeType":"383","messageId":"384","endLine":1,"endColumn":49},{"ruleId":"381","severity":1,"message":"390","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":15},{"ruleId":"381","severity":1,"message":"391","line":23,"column":8,"nodeType":"383","messageId":"384","endLine":23,"endColumn":14},{"ruleId":"381","severity":1,"message":"392","line":24,"column":8,"nodeType":"383","messageId":"384","endLine":24,"endColumn":24},{"ruleId":"381","severity":1,"message":"393","line":25,"column":8,"nodeType":"383","messageId":"384","endLine":25,"endColumn":17},{"ruleId":"381","severity":1,"message":"394","line":33,"column":8,"nodeType":"383","messageId":"384","endLine":33,"endColumn":20},{"ruleId":"381","severity":1,"message":"395","line":34,"column":8,"nodeType":"383","messageId":"384","endLine":34,"endColumn":17},{"ruleId":"381","severity":1,"message":"396","line":35,"column":8,"nodeType":"383","messageId":"384","endLine":35,"endColumn":16},{"ruleId":"381","severity":1,"message":"397","line":38,"column":8,"nodeType":"383","messageId":"384","endLine":38,"endColumn":14},{"ruleId":"381","severity":1,"message":"398","line":41,"column":10,"nodeType":"383","messageId":"384","endLine":41,"endColumn":32},{"ruleId":"381","severity":1,"message":"399","line":45,"column":10,"nodeType":"383","messageId":"384","endLine":45,"endColumn":20},{"ruleId":"381","severity":1,"message":"400","line":215,"column":11,"nodeType":"383","messageId":"384","endLine":215,"endColumn":21},{"ruleId":"381","severity":1,"message":"401","line":216,"column":17,"nodeType":"383","messageId":"384","endLine":216,"endColumn":23},{"ruleId":"381","severity":1,"message":"402","line":10,"column":8,"nodeType":"383","messageId":"384","endLine":10,"endColumn":13},{"ruleId":"381","severity":1,"message":"389","line":1,"column":38,"nodeType":"383","messageId":"384","endLine":1,"endColumn":49},{"ruleId":"381","severity":1,"message":"403","line":1,"column":51,"nodeType":"383","messageId":"384","endLine":1,"endColumn":58},{"ruleId":"381","severity":1,"message":"390","line":5,"column":8,"nodeType":"383","messageId":"384","endLine":5,"endColumn":15},{"ruleId":"381","severity":1,"message":"404","line":9,"column":31,"nodeType":"383","messageId":"384","endLine":9,"endColumn":59},{"ruleId":"381","severity":1,"message":"398","line":10,"column":10,"nodeType":"383","messageId":"384","endLine":10,"endColumn":32},{"ruleId":"381","severity":1,"message":"399","line":15,"column":10,"nodeType":"383","messageId":"384","endLine":15,"endColumn":20},{"ruleId":"381","severity":1,"message":"405","line":18,"column":8,"nodeType":"383","messageId":"384","endLine":18,"endColumn":18},{"ruleId":"381","severity":1,"message":"406","line":19,"column":8,"nodeType":"383","messageId":"384","endLine":19,"endColumn":20},{"ruleId":"381","severity":1,"message":"407","line":20,"column":8,"nodeType":"383","messageId":"384","endLine":20,"endColumn":20},{"ruleId":"381","severity":1,"message":"408","line":27,"column":13,"nodeType":"383","messageId":"384","endLine":27,"endColumn":20},{"ruleId":"381","severity":1,"message":"409","line":27,"column":22,"nodeType":"383","messageId":"384","endLine":27,"endColumn":28},{"ruleId":"381","severity":1,"message":"410","line":27,"column":43,"nodeType":"383","messageId":"384","endLine":27,"endColumn":60},{"ruleId":"385","severity":1,"message":"411","line":73,"column":8,"nodeType":"387","endLine":73,"endColumn":10,"suggestions":"412"},{"ruleId":"381","severity":1,"message":"399","line":14,"column":10,"nodeType":"383","messageId":"384","endLine":14,"endColumn":20},{"ruleId":"381","severity":1,"message":"413","line":2,"column":9,"nodeType":"383","messageId":"384","endLine":2,"endColumn":23},{"ruleId":"381","severity":1,"message":"414","line":1,"column":10,"nodeType":"383","messageId":"384","endLine":1,"endColumn":20},{"ruleId":"381","severity":1,"message":"415","line":1,"column":7,"nodeType":"383","messageId":"384","endLine":1,"endColumn":10},{"ruleId":"381","severity":1,"message":"416","line":17,"column":11,"nodeType":"383","messageId":"384","endLine":17,"endColumn":19},{"ruleId":"381","severity":1,"message":"399","line":8,"column":10,"nodeType":"383","messageId":"384","endLine":8,"endColumn":20},{"ruleId":"381","severity":1,"message":"415","line":8,"column":7,"nodeType":"383","messageId":"384","endLine":8,"endColumn":10},{"ruleId":"375","replacedBy":"417"},{"ruleId":"377","replacedBy":"418"},{"ruleId":"381","severity":1,"message":"419","line":7,"column":11,"nodeType":"383","messageId":"384","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"420","line":7,"column":15,"nodeType":"383","messageId":"384","endLine":7,"endColumn":21},{"ruleId":"381","severity":1,"message":"421","line":7,"column":40,"nodeType":"383","messageId":"384","endLine":7,"endColumn":57},{"ruleId":"381","severity":1,"message":"422","line":1,"column":27,"nodeType":"383","messageId":"384","endLine":1,"endColumn":36},{"ruleId":"381","severity":1,"message":"423","line":9,"column":20,"nodeType":"383","messageId":"384","endLine":9,"endColumn":31},"no-native-reassign",["424"],"no-negated-in-lhs",["425"],["424"],["425"],"no-unused-vars","'CardContent' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authError'. Either include it or remove the dependency array.","ArrayExpression",["426"],"'useCallback' is defined but never used.","'Spinner' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'routes' is defined but never used.","'onToggleLanguageAction' is defined but never used.","'translator' is defined but never used.","'useTestLog' is assigned a value but never used.","'screen' is assigned a value but never used.","'Slide' is defined but never used.","'useMemo' is defined but never used.","'adminTestActionChannelAction' is defined but never used.","'PeopleIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'TouchAppIcon' is defined but never used.","'loading' is assigned a value but never used.","'loaded' is assigned a value but never used.","'testBufferCounter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'usersEntity'. Either include them or remove the dependency array.",["427"],"'getErrorWorker' is defined but never used.","'dummyUsers' is defined but never used.","'eng' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["424"],["425"],"'id' is assigned a value but never used.","'active' is assigned a value but never used.","'confirmButtonName' is assigned a value but never used.","'useEffect' is defined but never used.","'setImageSrc' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},"Update the dependencies array to be: [authError, user]",{"range":"432","text":"433"},"Update the dependencies array to be: [dispatch, usersEntity]",{"range":"434","text":"435"},[2904,2910],"[authError, user]",[2691,2693],"[dispatch, usersEntity]"]